OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#time : DateAndTime [ '2025-01-08T14:35:04.689255+00:00' ],
		#prior : OmReference [ 'Pharo11-SNAPSHOT-64bit-84ac714ffb.2ED8A4FEBEA0', '1' ],
		#self : OmReference [ '1' ]
	},
	#content : EpMonticelloVersionsLoad {
		#versionNames : OrderedCollection [
			'BaselineOfRoassal3Exporters-CompatibleUserName.1698340035'
		]
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '1' ],
		#self : OmReference [ '2' ],
		#time : DateAndTime [ '2025-01-08T14:35:04.69007+00:00' ],
		#trigger : @3
	},
	#content : EpCategoryRegistration {
		#classCategoryName : #BaselineOfRoassal3Exporters,
		#affectedPackageName : #BaselineOfRoassal3Exporters
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '2' ],
		#self : OmReference [ '3' ],
		#time : DateAndTime [ '2025-01-08T14:35:04.7112+00:00' ],
		#trigger : OmReference [ '1' ]
	},
	#content : EpCategoryAddition {
		#classCategoryName : #BaselineOfRoassal3Exporters,
		#affectedPackageName : #BaselineOfRoassal3Exporters
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '3' ],
		#self : OmReference [ '4' ],
		#time : DateAndTime [ '2025-01-08T14:35:04.712451+00:00' ],
		#trigger : OmReference [ '1' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'BaselineOf subclass: #BaselineOfRoassal3Exporters\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfRoassal3Exporters\'',
				#superclassName : 'BaselineOf',
				#traitCompositionSource : '{}'
			},
			#name : #BaselineOfRoassal3Exporters,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'BaselineOfRoassal3Exporters class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'BaselineOfRoassal3Exporters class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #BaselineOfRoassal3Exporters,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #BaselineOfRoassal3Exporters,
			#package : #BaselineOfRoassal3Exporters,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '4' ],
		#self : OmReference [ '5' ],
		#time : DateAndTime [ '2025-01-08T14:35:04.714242+00:00' ],
		#trigger : OmReference [ '1' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'BaselineOf subclass: #BaselineOfRoassal3Exporters\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfRoassal3Exporters\'',
				#superclassName : 'BaselineOf',
				#traitCompositionSource : '{}'
			},
			#name : #BaselineOfRoassal3Exporters,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'BaselineOfRoassal3Exporters class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'BaselineOfRoassal3Exporters class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #BaselineOfRoassal3Exporters,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'I load roassal3 and Roassal3-Exporters',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #BaselineOfRoassal3Exporters,
			#package : #BaselineOfRoassal3Exporters,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'I load roassal3 and Roassal3-Exporters',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '5' ],
		#self : OmReference [ '6' ],
		#time : DateAndTime [ '2025-01-08T14:35:04.732992+00:00' ],
		#trigger : OmReference [ '1' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaselineOfRoassal3Exporters,
				#isMetaSide : false
			},
			#name : #'baseline:',
			#protocol : #baselines,
			#sourceCode : 'baseline: spec\r\t<baseline>\r\tspec\r\t\tfor: #common\r\t\tdo: [ | hasCanvas |\r\t\t\t"our dependencies"\r\t\t\t"https://github.com/ObjectProfile/Roassal3Exporters"\r\t\t\thasCanvas := Smalltalk globals includesKey: #RSCanvas.\r\t\t\thasCanvas ifFalse: [\r\t\t\t\tspec\r\t\t\t\tbaseline: \'Roassal3\'\r\t\t\t\twith: [ spec repository: \'github://ObjectProfile/Roassal3/src\' ].\r\t\t\t].\r\r\t\t\tspec\r\t\t\t\tbaseline: \'OSSubprocess\'\r\t\t\t\twith: [ spec repository: \'github://pharo-contributions/OSSubprocess/repository\' ].\r\t\t\tspec\r\t\t\t\tbaseline: \'Units\'\r\t\t\t\twith: [ spec repository: \'github://zweidenker/Units\' ].\r\r\t\t\t"The packages to use, but not load"\r\r\t\t\tspec\r\t\t\t\tpackage: #\'Roassal3-Exporters\' with: [\r\t\t\t\t\tspec requires: (hasCanvas\r\t\t\t\t\t\tifTrue: [ #(\'Units\') ]\r\t\t\t\t\t\tifFalse: [ #(\'Units\' \'Roassal3\') ])\r\t\t\t\t\t ];\r\t\t\t\tpackage: #\'Roassal3-Exporters-Examples\';\r\t\t\t\tpackage: #\'Roassal3-Exporters-Tests\';\r\t\t\t\tpackage: #\'Roassal3-Exporters-Video\' with: [spec requires: #(\'OSSubprocess\') ];\r\t\t\t\tpackage: #\'Roassal3-Exporters-AFrame\';\r\t\t\t\tpackage: \'Roassal3-Exporters-AFrame-Examples\';\r\t\t\t\tpackage: #\'Roassal3-Exporters-AFrame-Tests\'.\r\r\t\t\tspec\r\t\t\t\tgroup: \'Core\' with: #(\r\t\t\t\t\t\'Roassal3-Exporters\'\r\t\t\t\t\t\'Roassal3-Exporters-Examples\'\r\t\t\t\t\t\'Roassal3-Exporters-Tests\');\r\t\t\t\tgroup: \'Video\' with: #(\r\t\t\t\t\t\'Core\'\r\t\t\t\t\t\'Roassal3-Exporters-Video\');\r\t\t\t\tgroup: \'AFrame\' with: #(\r\t\t\t\t\t\'Core\'\r\t\t\t\t\t\'Roassal3-Exporters-AFrame\'\r\t\t\t\t\t\'Roassal3-Exporters-AFrame-Tests\'\r\t\t\t\t\t\'Roassal3-Exporters-AFrame-Examples\'\r\t\t\t\t);\r\t\t\t\tgroup: \'default\' with: #(\'Core\') ]',
			#stamp : '',
			#package : #BaselineOfRoassal3Exporters
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#time : DateAndTime [ '2025-01-08T14:35:06.413288+00:00' ],
		#prior : OmReference [ '6' ],
		#self : OmReference [ '7' ]
	},
	#content : EpMonticelloVersionsLoad {
		#versionNames : OrderedCollection [
			'BaselineOfUnits-CompatibleUserName.1691579505'
		]
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '7' ],
		#self : OmReference [ '8' ],
		#time : DateAndTime [ '2025-01-08T14:35:06.414066+00:00' ],
		#trigger : @3
	},
	#content : EpCategoryRegistration {
		#classCategoryName : #BaselineOfUnits,
		#affectedPackageName : #BaselineOfUnits
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '8' ],
		#self : OmReference [ '9' ],
		#time : DateAndTime [ '2025-01-08T14:35:06.432536+00:00' ],
		#trigger : OmReference [ '7' ]
	},
	#content : EpCategoryAddition {
		#classCategoryName : #BaselineOfUnits,
		#affectedPackageName : #BaselineOfUnits
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '9' ],
		#self : OmReference [ '10' ],
		#time : DateAndTime [ '2025-01-08T14:35:06.434038+00:00' ],
		#trigger : OmReference [ '7' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'BaselineOf subclass: #BaselineOfUnits\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'BaselineOfUnits\'',
				#superclassName : 'BaselineOf',
				#traitCompositionSource : '{}'
			},
			#name : #BaselineOfUnits,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'BaselineOfUnits class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'BaselineOfUnits class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #BaselineOfUnits,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #BaselineOfUnits,
			#package : #BaselineOfUnits,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '10' ],
		#self : OmReference [ '11' ],
		#time : DateAndTime [ '2025-01-08T14:35:06.448087+00:00' ],
		#trigger : OmReference [ '7' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaselineOfUnits,
				#isMetaSide : false
			},
			#name : #'baseline:',
			#protocol : #baselines,
			#sourceCode : 'baseline: spec\r\t<baseline>\r\r\tspec for: #\'common\' do: [\t\t\r\t\tspec \r\t\t\tpackage: \'Units-Core\';\r\t\t\tpackage: \'Units-Tests\' with: [ spec requires: \'Units-Core\' ].\r\t\t\t\r\t\tspec \r\t\t\tgroup: \'default\' with: #(\'core\' \'test\');\r\t\t\tgroup: \'core\'     with: #(\'Units-Core\');\r\t\t\tgroup: \'test\'      with: #(\'Units-Tests\')].\r\t\t\r\t\t\r\t ',
			#stamp : '',
			#package : #BaselineOfUnits
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#time : DateAndTime [ '2025-01-08T14:35:07.002892+00:00' ],
		#prior : OmReference [ '11' ],
		#self : OmReference [ '12' ]
	},
	#content : EpMonticelloVersionsLoad {
		#versionNames : OrderedCollection [
			'Units-Core-CompatibleUserName.1691579505'
		]
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '12' ],
		#self : OmReference [ '13' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.003802+00:00' ],
		#trigger : @3
	},
	#content : EpCategoryRegistration {
		#classCategoryName : #Units-Core,
		#affectedPackageName : #Units-Core
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '13' ],
		#self : OmReference [ '14' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.029316+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpCategoryAddition {
		#classCategoryName : #Units-Core,
		#affectedPackageName : #Units-Core
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '14' ],
		#self : OmReference [ '15' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.030415+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'ProtoObject subclass: #MessageDelegate\r\tinstanceVariableNames: \'privateDelegate\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'ProtoObject',
				#traitCompositionSource : '{}'
			},
			#name : #MessageDelegate,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #MessageDelegate,
						#isMetaSide : false
					},
					#name : #privateDelegate,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'MessageDelegate class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'MessageDelegate class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #MessageDelegate,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '15' ],
		#self : OmReference [ '16' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.03205+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'ProtoObject subclass: #MessageDelegate\r\tinstanceVariableNames: \'privateDelegate\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'ProtoObject',
				#traitCompositionSource : '{}'
			},
			#name : #MessageDelegate,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #MessageDelegate,
						#isMetaSide : false
					},
					#name : #privateDelegate,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'MessageDelegate class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'MessageDelegate class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #MessageDelegate,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'An object that passes messages on to a private delegate',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'An object that passes messages on to a private delegate',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '16' ],
		#self : OmReference [ '17' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.034283+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Object subclass: #SIPrefix\r\tinstanceVariableNames: \'abbreviation name scalingFactor\'\r\tclassVariableNames: \'SIPrefixesByAbbreviation SIPrefixesByName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Object',
				#traitCompositionSource : '{}'
			},
			#name : #SIPrefix,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #abbreviation,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #name,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #scalingFactor,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'SIPrefix class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'SIPrefix class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #SIPrefix,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #SIPrefixesByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #SIPrefixesByName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '17' ],
		#self : OmReference [ '18' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.035015+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Object subclass: #SIPrefix\r\tinstanceVariableNames: \'abbreviation name scalingFactor\'\r\tclassVariableNames: \'SIPrefixesByAbbreviation SIPrefixesByName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Object',
				#traitCompositionSource : '{}'
			},
			#name : #SIPrefix,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #abbreviation,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #name,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #scalingFactor,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'SIPrefix class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'SIPrefix class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #SIPrefix,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'SIPrefix represents a power of 10 attached to a unit.\rExamples: milli, micro, kilo, etc.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #SIPrefixesByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #SIPrefix,
						#isMetaSide : false
					},
					#name : #SIPrefixesByName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'SIPrefix represents a power of 10 attached to a unit.\rExamples: milli, micro, kilo, etc.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '18' ],
		#self : OmReference [ '19' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.036753+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Object subclass: #Unit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'PrintAbbreviated\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Object',
				#traitCompositionSource : '{}'
			},
			#name : #Unit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'Unit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'Unit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #Unit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #Unit,
						#isMetaSide : false
					},
					#name : #PrintAbbreviated,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '19' ],
		#self : OmReference [ '20' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.037506+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Object subclass: #Unit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'PrintAbbreviated\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Object',
				#traitCompositionSource : '{}'
			},
			#name : #Unit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'Unit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'Unit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #Unit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'Class Unit is the superclass for all other unit classes.\rInstances represent units which are attached to numbers; for example\r\'meters\' (a BaseUnit), \'meters per second\' (a CompoundUnit),\r\'joule seconds per liter\' (a ComplexUnit), \'degrees Kelvin\' (a TemperatureBaseUnit),\r\'degrees Celsius\' (a TemperatureUnit), \'kilohertz\' (a PrefixedUnit),\rand \'moles of hydrogen\' (a ModifiedUnit).\r\rA number of methods on the class side of Unit provide for easy access to built-in units.\r\rThe basic unit \'kilogram\' is special given that it is basic and has a \'kilo\' prefix, see\ralso http://www.bipm.org/en/si/si_brochure/chapter3/3-2.html\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #Unit,
						#isMetaSide : false
					},
					#name : #PrintAbbreviated,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'Class Unit is the superclass for all other unit classes.\rInstances represent units which are attached to numbers; for example\r\'meters\' (a BaseUnit), \'meters per second\' (a CompoundUnit),\r\'joule seconds per liter\' (a ComplexUnit), \'degrees Kelvin\' (a TemperatureBaseUnit),\r\'degrees Celsius\' (a TemperatureUnit), \'kilohertz\' (a PrefixedUnit),\rand \'moles of hydrogen\' (a ModifiedUnit).\r\rA number of methods on the class side of Unit provide for easy access to built-in units.\r\rThe basic unit \'kilogram\' is special given that it is basic and has a \'kilo\' prefix, see\ralso http://www.bipm.org/en/si/si_brochure/chapter3/3-2.html\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '20' ],
		#self : OmReference [ '21' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.039046+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #CompoundUnit\r\tinstanceVariableNames: \'units exponents\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #CompoundUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #CompoundUnit,
						#isMetaSide : false
					},
					#name : #units,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #CompoundUnit,
						#isMetaSide : false
					},
					#name : #exponents,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'CompoundUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'CompoundUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #CompoundUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '21' ],
		#self : OmReference [ '22' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.040657+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #CompoundUnit\r\tinstanceVariableNames: \'units exponents\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #CompoundUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #CompoundUnit,
						#isMetaSide : false
					},
					#name : #units,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #CompoundUnit,
						#isMetaSide : false
					},
					#name : #exponents,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'CompoundUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'CompoundUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #CompoundUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'Instances of CompoundUnits represent units which are combinations\rof base units (only).\r\rExamples of things that are CompoundUnits:\r\tmeters per second\r\tcubic meters per degree Kelvin\r\tgrams per mole of calcium\r\t\rExamples of things that are not CompoundUnits:\r\t\r\tmiles per hour\r\tcubic meters per degree Farenheit\r\tkilograms per mole\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'Instances of CompoundUnits represent units which are combinations\rof base units (only).\r\rExamples of things that are CompoundUnits:\r\tmeters per second\r\tcubic meters per degree Kelvin\r\tgrams per mole of calcium\r\t\rExamples of things that are not CompoundUnits:\r\t\r\tmiles per hour\r\tcubic meters per degree Farenheit\r\tkilograms per mole\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '22' ],
		#self : OmReference [ '23' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.04234+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'CompoundUnit subclass: #ComplexUnit\r\tinstanceVariableNames: \'conversionFactor cachedBaseUnits\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'CompoundUnit',
				#traitCompositionSource : '{}'
			},
			#name : #ComplexUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ComplexUnit,
						#isMetaSide : false
					},
					#name : #conversionFactor,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ComplexUnit,
						#isMetaSide : false
					},
					#name : #cachedBaseUnits,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'ComplexUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'ComplexUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #ComplexUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '23' ],
		#self : OmReference [ '24' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.042965+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'CompoundUnit subclass: #ComplexUnit\r\tinstanceVariableNames: \'conversionFactor cachedBaseUnits\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'CompoundUnit',
				#traitCompositionSource : '{}'
			},
			#name : #ComplexUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ComplexUnit,
						#isMetaSide : false
					},
					#name : #conversionFactor,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ComplexUnit,
						#isMetaSide : false
					},
					#name : #cachedBaseUnits,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'ComplexUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'ComplexUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #ComplexUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'This represents a product of one or more different units.',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'This represents a product of one or more different units.',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '24' ],
		#self : OmReference [ '25' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.04469+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #ModifiedUnit\r\tinstanceVariableNames: \'baseUnit modification\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #ModifiedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ModifiedUnit,
						#isMetaSide : false
					},
					#name : #baseUnit,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ModifiedUnit,
						#isMetaSide : false
					},
					#name : #modification,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'ModifiedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'ModifiedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #ModifiedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '25' ],
		#self : OmReference [ '26' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.045295+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #ModifiedUnit\r\tinstanceVariableNames: \'baseUnit modification\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #ModifiedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ModifiedUnit,
						#isMetaSide : false
					},
					#name : #baseUnit,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #ModifiedUnit,
						#isMetaSide : false
					},
					#name : #modification,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'ModifiedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'ModifiedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #ModifiedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'A base unit with an arbitrary modification that makes it incompatible\rwith anything that does not have the same modification.  Works well with domain-specific\r\'modifications\', e.g.,\r\t1.6 moles\rcan now become:\r\t1.6 moles of sulfuric acid\r\r("sulfuric acid" might be a String, or a ChemicalCompound, or whatever.)\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'A base unit with an arbitrary modification that makes it incompatible\rwith anything that does not have the same modification.  Works well with domain-specific\r\'modifications\', e.g.,\r\t1.6 moles\rcan now become:\r\t1.6 moles of sulfuric acid\r\r("sulfuric acid" might be a String, or a ChemicalCompound, or whatever.)\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '26' ],
		#self : OmReference [ '27' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.046617+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #NamedUnit\r\tinstanceVariableNames: \'abbreviation name pluralName\'\r\tclassVariableNames: \'UnitsByAbbreviation UnitsByName UnitsByPluralName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #NamedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #abbreviation,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #name,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #pluralName,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'NamedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'NamedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #NamedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByName,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByPluralName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '27' ],
		#self : OmReference [ '28' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.04722+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #NamedUnit\r\tinstanceVariableNames: \'abbreviation name pluralName\'\r\tclassVariableNames: \'UnitsByAbbreviation UnitsByName UnitsByPluralName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #NamedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #abbreviation,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #name,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #pluralName,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'NamedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'NamedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #NamedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'This is a kind of unit with a specific (singular and plural) name, and an abbreviation. e.g., meter, meters, m.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByName,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #NamedUnit,
						#isMetaSide : false
					},
					#name : #UnitsByPluralName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'This is a kind of unit with a specific (singular and plural) name, and an abbreviation. e.g., meter, meters, m.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '28' ],
		#self : OmReference [ '29' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.048554+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'NamedUnit subclass: #BaseUnit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'SIUnitsByAbbreviation SIUnitsByName SIUnitsByPluralName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'NamedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #BaseUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'BaseUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'BaseUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #BaseUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByName,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByPluralName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '29' ],
		#self : OmReference [ '30' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.049176+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'NamedUnit subclass: #BaseUnit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'SIUnitsByAbbreviation SIUnitsByName SIUnitsByPluralName\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'NamedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #BaseUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'BaseUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'BaseUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #BaseUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'This represents one of the SI base units.\r\rBy default the following "official" units are defined:\r\tgram\r\tmeter\r\tsecond\r\tcandela (light intensity)\r\tmole (pseudo-dimensionless quantity)\r\t\rTwo \'extra\' base units are included to demonstrate how to extend the system:\r\tbase pairs (nucleotides on a DNA strand, for automatic analysis)\r\tdonuts (e.g., 1 homer = 8 donuts/minute)\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByAbbreviation,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByName,
					#parent : @8
				},
				RGClassVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #BaseUnit,
						#isMetaSide : false
					},
					#name : #SIUnitsByPluralName,
					#parent : @8
				}
			],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'This represents one of the SI base units.\r\rBy default the following "official" units are defined:\r\tgram\r\tmeter\r\tsecond\r\tcandela (light intensity)\r\tmole (pseudo-dimensionless quantity)\r\t\rTwo \'extra\' base units are included to demonstrate how to extend the system:\r\tbase pairs (nucleotides on a DNA strand, for automatic analysis)\r\tdonuts (e.g., 1 homer = 8 donuts/minute)\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '30' ],
		#self : OmReference [ '31' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.050379+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'BaseUnit subclass: #TemperatureBaseUnit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'BaseUnit',
				#traitCompositionSource : '{}'
			},
			#name : #TemperatureBaseUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TemperatureBaseUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TemperatureBaseUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TemperatureBaseUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '31' ],
		#self : OmReference [ '32' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.050968+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'BaseUnit subclass: #TemperatureBaseUnit\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'BaseUnit',
				#traitCompositionSource : '{}'
			},
			#name : #TemperatureBaseUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [ ],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TemperatureBaseUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TemperatureBaseUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TemperatureBaseUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'Temperature units are different because they require\ra general linear transformation for basic arithmetic operations.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'Temperature units are different because they require\ra general linear transformation for basic arithmetic operations.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '32' ],
		#self : OmReference [ '33' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.052126+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'NamedUnit subclass: #DerivedUnit\r\tinstanceVariableNames: \'unitValue\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'NamedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #DerivedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #DerivedUnit,
						#isMetaSide : false
					},
					#name : #unitValue,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'DerivedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'DerivedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #DerivedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '33' ],
		#self : OmReference [ '34' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.052698+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'NamedUnit subclass: #DerivedUnit\r\tinstanceVariableNames: \'unitValue\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'NamedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #DerivedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #DerivedUnit,
						#isMetaSide : false
					},
					#name : #unitValue,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'DerivedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'DerivedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #DerivedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'This is a definition of a unit in terms of a product of powers of\rother units, plus a scalar value associated with the unit.\r\rExample: 1 inch = 2.54 cm\rNote that the "left side" is always magnitude 1, which corresponds to 1 unit of the DerivedUnit. \r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'This is a definition of a unit in terms of a product of powers of\rother units, plus a scalar value associated with the unit.\r\rExample: 1 inch = 2.54 cm\rNote that the "left side" is always magnitude 1, which corresponds to 1 unit of the DerivedUnit. \r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '34' ],
		#self : OmReference [ '35' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.055033+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'DerivedUnit subclass: #TemperatureUnit\r\tinstanceVariableNames: \'additiveFactor\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'DerivedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #TemperatureUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #TemperatureUnit,
						#isMetaSide : false
					},
					#name : #additiveFactor,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TemperatureUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TemperatureUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TemperatureUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '35' ],
		#self : OmReference [ '36' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.055591+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'DerivedUnit subclass: #TemperatureUnit\r\tinstanceVariableNames: \'additiveFactor\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'DerivedUnit',
				#traitCompositionSource : '{}'
			},
			#name : #TemperatureUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #TemperatureUnit,
						#isMetaSide : false
					},
					#name : #additiveFactor,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TemperatureUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TemperatureUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TemperatureUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'A temperature needs an additional "additive factor" to handle,\re.g., Celsius to Fahrenheit.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'A temperature needs an additional "additive factor" to handle,\re.g., Celsius to Fahrenheit.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '36' ],
		#self : OmReference [ '37' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.056726+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #PrefixedUnit\r\tinstanceVariableNames: \'prefix unit\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #PrefixedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #PrefixedUnit,
						#isMetaSide : false
					},
					#name : #prefix,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #PrefixedUnit,
						#isMetaSide : false
					},
					#name : #unit,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'PrefixedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'PrefixedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #PrefixedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '37' ],
		#self : OmReference [ '38' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.057283+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Unit subclass: #PrefixedUnit\r\tinstanceVariableNames: \'prefix unit\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Unit',
				#traitCompositionSource : '{}'
			},
			#name : #PrefixedUnit,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #PrefixedUnit,
						#isMetaSide : false
					},
					#name : #prefix,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #PrefixedUnit,
						#isMetaSide : false
					},
					#name : #unit,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'PrefixedUnit class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'PrefixedUnit class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #PrefixedUnit,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'This is a unit with an SI prefix attached.\rSee class SIPrefix for details.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'This is a unit with an SI prefix attached.\rSee class SIPrefix for details.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '38' ],
		#self : OmReference [ '39' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.058452+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpClassAddition {
		#class : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Magnitude subclass: #UnitValue\r\tinstanceVariableNames: \'unit value\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Magnitude',
				#traitCompositionSource : '{}'
			},
			#name : #UnitValue,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #UnitValue,
						#isMetaSide : false
					},
					#name : #unit,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #UnitValue,
						#isMetaSide : false
					},
					#name : #value,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'UnitValue class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'UnitValue class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #UnitValue,
					#isMetaSide : false
				},
				#parent : @8,
				#content : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '39' ],
		#self : OmReference [ '40' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.059086+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpBehaviorCommentChange {
		#behavior : RGClassDefinition {
			#annotations : IdentityDictionary {
				#definitionSource : 'Magnitude subclass: #UnitValue\r\tinstanceVariableNames: \'unit value\'\r\tclassVariableNames: \'\'\r\tpackage: \'Units-Core\'',
				#superclassName : 'Magnitude',
				#traitCompositionSource : '{}'
			},
			#name : #UnitValue,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#instanceVariables : OrderedCollection [
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #UnitValue,
						#isMetaSide : false
					},
					#name : #unit,
					#parent : @8
				},
				RGInstanceVariableDefinition {
					#annotations : IdentityDictionary {
						#className : #UnitValue,
						#isMetaSide : false
					},
					#name : #value,
					#parent : @8
				}
			],
			#metaClass : RGMetaclassDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'UnitValue class\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'UnitValue class',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#instanceVariables : OrderedCollection [ ],
				#baseClass : @8
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #UnitValue,
					#isMetaSide : false
				},
				#parent : @8,
				#content : 'UnitValue is a number with a unit attached.\rSee the methods here for more information.\r',
				#stamp : ''
			},
			#classVariables : OrderedCollection [ ],
			#category : #Units-Core,
			#package : #Units-Core,
			#sharedPools : OrderedCollection [ ]
		},
		#oldComment : '',
		#newComment : 'UnitValue is a number with a unit attached.\rSee the methods here for more information.\r',
		#oldStamp : '',
		#newStamp : ''
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '40' ],
		#self : OmReference [ '41' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.217141+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'MessageDelegate class',
				#isMetaSide : true
			},
			#name : #'on:',
			#protocol : #'instance creation',
			#sourceCode : 'on: anObject\r\t"Answer a new instance of the receiver with the given delegate."\r\r\t^self new privateDelegate: anObject',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '41' ],
		#self : OmReference [ '42' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.217876+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #MessageDelegate,
				#isMetaSide : false
			},
			#name : #'doesNotUnderstand:',
			#protocol : #'system primitives',
			#sourceCode : 'doesNotUnderstand: aMessage\r\t"Pass on to the delegate."\r\t\r\t^self privateDelegate value: aMessage',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '42' ],
		#self : OmReference [ '43' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.218415+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #MessageDelegate,
				#isMetaSide : false
			},
			#name : #privateDelegate,
			#protocol : #accessing,
			#sourceCode : 'privateDelegate\r\t"Answer the value of privateDelegate"\r\r\t^ privateDelegate',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '43' ],
		#self : OmReference [ '44' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.218676+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #MessageDelegate,
				#isMetaSide : false
			},
			#name : #'privateDelegate:',
			#protocol : #accessing,
			#sourceCode : 'privateDelegate: anObject\r\t"Set the value of privateDelegate"\r\r\tprivateDelegate := anObject',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '44' ],
		#self : OmReference [ '45' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.218894+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:scalingFactor:',
			#protocol : #initialization,
			#sourceCode : 'abbreviation: abbreviation name: prefixName scalingFactor: scalingFactor\r\t| prefix |\r\tprefix := self new\r\t\tabbreviation: abbreviation\r\t\tname: prefixName\r\t\tscalingFactor: scalingFactor.\r\tSIPrefixesByAbbreviation at: abbreviation put: prefix.\r\tSIPrefixesByName at: prefixName put: prefix.\r\t^prefix',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '45' ],
		#self : OmReference [ '46' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.21908+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #initializeClass,
			#protocol : #initialization,
			#sourceCode : 'initializeClass\r\t"SIPrefix initializeClass."\r\t"Do not rename this to #initialize."\r\tSIPrefixesByName := Dictionary new.\r\tSIPrefixesByAbbreviation := Dictionary new.\r\tself abbreviation: \'y\' name: \'yocto\' scalingFactor: (10 raisedTo: -24).\r\tself abbreviation: \'z\' name: \'zepto\' scalingFactor: (10 raisedTo: -21).\r\tself abbreviation: \'a\' name: \'atto\' scalingFactor: (10 raisedTo: -18).\r\tself abbreviation: \'f\' name: \'femto\' scalingFactor: (10 raisedTo: -15).\r\tself abbreviation: \'p\' name: \'pico\' scalingFactor: (10 raisedTo: -12).\r\tself abbreviation: \'n\' name: \'nano\' scalingFactor: (10 raisedTo: -9).\r\tself abbreviation: \'u\' name: \'micro\' scalingFactor: (10 raisedTo: -6).\r\tself abbreviation: \'m\' name: \'milli\' scalingFactor: (10 raisedTo: -3).\r\tself abbreviation: \'c\' name: \'centi\' scalingFactor: (10 raisedTo: -2).\r\tself abbreviation: \'d\' name: \'deci\' scalingFactor: (10 raisedTo: -1).\r\tself abbreviation: \'da\' name: \'deka\' scalingFactor: (10 raisedTo: 1).\r\tself abbreviation: \'h\' name: \'hecto\' scalingFactor: (10 raisedTo: 2).\r\tself abbreviation: \'k\' name: \'kilo\' scalingFactor: (10 raisedTo: 3).\r\tself abbreviation: \'M\' name: \'mega\' scalingFactor: (10 raisedTo: 6).\r\tself abbreviation: \'G\' name: \'giga\' scalingFactor: (10 raisedTo: 9).\r\tself abbreviation: \'T\' name: \'tera\' scalingFactor: (10 raisedTo: 12).\r\tself abbreviation: \'P\' name: \'peta\' scalingFactor: (10 raisedTo: 15).\r\tself abbreviation: \'E\' name: \'exa\' scalingFactor: (10 raisedTo: 18).\r\tself abbreviation: \'Z\' name: \'zetta\' scalingFactor: (10 raisedTo: 21).\r\tself abbreviation: \'Y\' name: \'yotta\' scalingFactor: (10 raisedTo: 24)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '46' ],
		#self : OmReference [ '47' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.219201+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #'named:',
			#protocol : #accessing,
			#sourceCode : 'named: prefixName\r\t^SIPrefixesByName at: prefixName',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '47' ],
		#self : OmReference [ '48' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.219321+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #'prefixAbbreviationsDo:',
			#protocol : #enumerating,
			#sourceCode : 'prefixAbbreviationsDo: block\r\t"Evaluate \'block\' once with each prefix abbreviation, in no particular order."\r\tSIPrefixesByAbbreviation keysDo: block',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '48' ],
		#self : OmReference [ '49' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.219441+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #'prefixStringsDo:',
			#protocol : #enumerating,
			#sourceCode : 'prefixStringsDo: block\r\t"Evaluate \'block\' once with each prefix string, in no particular order."\r\tSIPrefixesByName keysDo: block',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '49' ],
		#self : OmReference [ '50' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.219554+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'SIPrefix class',
				#isMetaSide : true
			},
			#name : #'withAbbreviation:',
			#protocol : #accessing,
			#sourceCode : 'withAbbreviation: abbreviation\r\t^SIPrefixesByAbbreviation at: abbreviation',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '50' ],
		#self : OmReference [ '51' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.21967+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #abbreviation,
			#protocol : #accessing,
			#sourceCode : 'abbreviation\r\t^abbreviation',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '51' ],
		#self : OmReference [ '52' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.219783+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #'abbreviation:name:scalingFactor:',
			#protocol : #initialization,
			#sourceCode : 'abbreviation: myAbbreviation name: myName scalingFactor: myScalingFactor\r\tabbreviation := myAbbreviation.\r\tname := myName.\r\tscalingFactor := myScalingFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '52' ],
		#self : OmReference [ '53' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.21989+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #name,
			#protocol : #accessing,
			#sourceCode : 'name\r\t^name',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '53' ],
		#self : OmReference [ '54' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220001+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #'printOn:',
			#protocol : #printing,
			#sourceCode : 'printOn: stream\r\tsuper printOn: stream.\r\tstream\r\t\tnextPutAll: \' [\';\r\t\tnextPutAll: name;\r\t\tnextPut: $]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '54' ],
		#self : OmReference [ '55' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220193+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #scalingFactor,
			#protocol : #accessing,
			#sourceCode : 'scalingFactor\r\t^scalingFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '55' ],
		#self : OmReference [ '56' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220307+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #SIPrefix,
				#isMetaSide : false
			},
			#name : #'storeOn:',
			#protocol : #printing,
			#sourceCode : 'storeOn: aStream\r\t"Store the code to lookup the receiver instead of for a new instance."\r\t\r\taStream\r\t\tnextPutAll: \'(SIPrefix named: \'\'\';\r\t\tnextPutAll: name;\r\t\tnextPutAll: \'\'\')\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '56' ],
		#self : OmReference [ '57' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.22049+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'ComplexUnit class',
				#isMetaSide : true
			},
			#name : #'units:exponents:',
			#protocol : #'instance creation',
			#sourceCode : 'units: units exponents: exponents\r\t"if we have just one exponent of size one, the unit itself is enough"\r\t(exponents size = 1 and: [exponents first = 1]) ifTrue: [ ^units first ].\r\tunits\r\t\tdetect: [:each | each isBaseUnit not]\r\t\tifNone: [\r\t\t\t"All the units are base units ... we can use a CompoundUnit instead to save space."\r\t\t\t^CompoundUnit\r\t\t\t\tunits: units\r\t\t\t\texponents: exponents].\r\t^self new\r\t\tunits: units\r\t\texponents: exponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '57' ],
		#self : OmReference [ '58' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220695+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t"Since base units are expensive to compute for ComplexUnits, they are cached here."\r\tcachedBaseUnits isNil\r\t\tifTrue: [cachedBaseUnits := self calculateBaseUnits].\r\t^cachedBaseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '58' ],
		#self : OmReference [ '59' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220866+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #calculateBaseUnits,
			#protocol : #conversion,
			#sourceCode : 'calculateBaseUnits\r\t| baseUnits unitDictionary newUnits newExponents scratch |\r\tunitDictionary := IdentityDictionary new.\r\tself unitsAndExponentsDo: [:unit :exponent |\r\t\tbaseUnits := unit baseUnits.\r\t\tbaseUnits unitsAndExponentsDo: [:subunit :subexponent |\r\t\t\t(unitDictionary includesKey: subunit)\r\t\t\t\tifFalse: [\r\t\t\t\t\tunitDictionary\r\t\t\t\t\t\tat: subunit\r\t\t\t\t\t\tput: subexponent * exponent]\r\t\t\t\tifTrue: [\r\t\t\t\t\tunitDictionary\r\t\t\t\t\t\tat: subunit\r\t\t\t\t\t\tput: (unitDictionary at: subunit) + (subexponent * exponent)]]].\r\tnewUnits := OrderedCollection new.\r\tnewExponents := OrderedCollection new.\r\t(unitDictionary keys asSortedCollection: self class sortBlock) do: [:unit |\r\t\tscratch := unitDictionary at: unit.\r\t\tscratch isZero ifFalse: [\r\t\t\tnewUnits add: unit.\r\t\t\tnewExponents add: scratch]].\t\t\r\t^CompoundUnit\r\t\tunits: newUnits\r\t\texponents: newExponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '59' ],
		#self : OmReference [ '60' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.220977+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: unit\r\t^unit consistentWithComplexUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '60' ],
		#self : OmReference [ '61' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.221119+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: baseUnit\r\t"This might be true, since we may be containing non-base units that reduce\r\t to the base unit."\r\t"For example, \'meters * seconds * Hertz\' is consistent with \'meters\'."\r\t^self baseUnits consistentWith: baseUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '61' ],
		#self : OmReference [ '62' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.221259+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: complexUnit\r\t^self baseUnits consistentWith: complexUnit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '62' ],
		#self : OmReference [ '63' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.22139+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithCompoundUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithCompoundUnit: compoundUnit\r\t^self baseUnits consistentWith: compoundUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '63' ],
		#self : OmReference [ '64' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.221528+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithModifiedUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithModifiedUnit: modifiedUnit\r\t"This might be true, since we may be containing non-base units that reduce to the\r\t modified unit."\r\t"For example, \'moles of hydrogen * seconds * Hertz\' is consistent with \'moles of\r\t hydrogen\'."\r\t^self baseUnits consistentWith: modifiedUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '64' ],
		#self : OmReference [ '65' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.22166+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^conversionFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '65' ],
		#self : OmReference [ '66' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.221791+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #isComplexUnit,
			#protocol : #testing,
			#sourceCode : 'isComplexUnit\r\t^ true',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '66' ],
		#self : OmReference [ '67' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.221945+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'prefixedBy:',
			#protocol : #conversion,
			#sourceCode : 'prefixedBy: prefixName\r\t^self error: \'You cannot attach prefixes to complex units.\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '67' ],
		#self : OmReference [ '68' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222084+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ComplexUnit,
				#isMetaSide : false
			},
			#name : #'units:exponents:',
			#protocol : #initialization,
			#sourceCode : 'units: myUnits exponents: myExponents\r\tsuper units: myUnits exponents: myExponents.\r\tconversionFactor := 1.\r\tunits with: exponents do: [:unit :exponent |\r\t\tconversionFactor := conversionFactor * \r\t\t\t(unit conversionFactor raisedTo: exponent)]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '68' ],
		#self : OmReference [ '69' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.22222+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'CompoundUnit class',
				#isMetaSide : true
			},
			#name : #null,
			#protocol : #'instance creation',
			#sourceCode : 'null\r\t"A special CompoundUnit used to coerce numbers into the Unit domain."\r\t^self\r\t\tunits: #()\r\t\texponents: #()',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '69' ],
		#self : OmReference [ '70' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222369+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'CompoundUnit class',
				#isMetaSide : true
			},
			#name : #sortBlock,
			#protocol : #sorting,
			#sourceCode : 'sortBlock\r\t^[:left :right | left abbreviation < right abbreviation]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '70' ],
		#self : OmReference [ '71' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222503+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'CompoundUnit class',
				#isMetaSide : true
			},
			#name : #'units:exponents:',
			#protocol : #'instance creation',
			#sourceCode : 'units: units exponents: exponents\r\t^self new\r\t\tunits: units\r\t\texponents: exponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '71' ],
		#self : OmReference [ '72' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222647+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'=',
			#protocol : #comparing,
			#sourceCode : '= anotherUnit\r\t"This is not the same as #consistentWith:, which checks for isomorphism.  This method\r\t just checks to see if the receiver and argument have the same units and exponents."\r\tanotherUnit class == self class ifFalse: [^false].\r\t^units = anotherUnit snarfUnits\r\t\tand: [exponents = anotherUnit snarfExponents]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '72' ],
		#self : OmReference [ '73' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222796+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t"The receiver already consists entirely of base units."\r\t^self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '73' ],
		#self : OmReference [ '74' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.222929+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: unit\r\t^unit consistentWithCompoundUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '74' ],
		#self : OmReference [ '75' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223079+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: baseUnit\r\t"Always false, because a CompoundUnit must always have a nontrivial set of units."\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '75' ],
		#self : OmReference [ '76' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223218+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: complexUnit\r\t^self consistentWith: complexUnit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '76' ],
		#self : OmReference [ '77' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223357+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithCompoundUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithCompoundUnit: compoundUnit\r\t"We can check the unit and exponent arrays for equality directly, since the units are assumed to be sorted alphabetically."\r\t^units = compoundUnit snarfUnits\r\t\tand: [exponents = compoundUnit snarfExponents]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '77' ],
		#self : OmReference [ '78' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223486+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithModifiedUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithModifiedUnit: modifiedUnit\r\t"Same as #consistentWithBaseUnit:."\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '78' ],
		#self : OmReference [ '79' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223612+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^1',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '79' ],
		#self : OmReference [ '80' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.22374+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #hash,
			#protocol : #comparing,
			#sourceCode : 'hash\r\t^units hash bitXor: exponents hash',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '80' ],
		#self : OmReference [ '81' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.223896+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #includesNegativeExponents,
			#protocol : #predicates,
			#sourceCode : 'includesNegativeExponents\r\t^exponents anySatisfy: [:each | each < 0]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '81' ],
		#self : OmReference [ '82' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224021+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #includesPositiveExponents,
			#protocol : #predicates,
			#sourceCode : 'includesPositiveExponents\r\t^exponents anySatisfy: [:each | each > 0]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '82' ],
		#self : OmReference [ '83' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224147+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #inverse,
			#protocol : #conversion,
			#sourceCode : 'inverse\r\t^self class\r\t\tunits: units\r\t\texponents: (exponents collect: [:each | each negated])',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '83' ],
		#self : OmReference [ '84' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224269+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #isNull,
			#protocol : #predicates,
			#sourceCode : 'isNull\r\t^units isEmpty',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '84' ],
		#self : OmReference [ '85' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224404+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #negativeExponentsCount,
			#protocol : #predicates,
			#sourceCode : 'negativeExponentsCount\r\t| count |\r\tcount := 0.\r\texponents do: [:each | each < 0 ifTrue: [count := count + 1]].\r\t^count',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '85' ],
		#self : OmReference [ '86' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224536+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #positiveExponentsCount,
			#protocol : #predicates,
			#sourceCode : 'positiveExponentsCount\r\t| count |\r\tcount := 0.\r\texponents do: [:each | each > 0 ifTrue: [count := count + 1]].\r\t^count',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '86' ],
		#self : OmReference [ '87' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224668+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'prefixedBy:',
			#protocol : #conversion,
			#sourceCode : 'prefixedBy: prefixName\r\t^self error: \'You cannot attach prefixes to compound units.\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '87' ],
		#self : OmReference [ '88' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224831+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'printAbbreviationOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviationOn: stream\r\t| first any count |\r\tfirst := true.\r\tany := false.\r\tself unitsAndExponentsDo: [:unit :exponent |\r\t\texponent > 0 ifTrue: [\r\t\t\tany := true.\r\t\t\tfirst ifFalse: [stream nextPut: $*].\r\t\t\tfirst := false.\r\t\t\tunit printAbbreviationOn: stream.\r\t\t\texponent ~= 1\r\t\t\t\tifTrue: [stream nextPut: $^; print: exponent]]].\r\tcount := self negativeExponentsCount.\r\tcount > 0 ifTrue: [\r\t\tany ifFalse: [stream nextPut: $1].\r\t\tstream nextPut: $/.\r\t\tcount > 1 ifTrue: [stream nextPut: $(].\r\t\tfirst := true.\r\t\tself unitsAndExponentsDo: [:unit :exponent |\r\t\t\texponent ~= 1 ifTrue: [\r\t\t\t\tfirst ifFalse: [stream nextPut: $*].\r\t\t\t\tfirst := false.\r\t\t\t\tunit printAbbreviationOn: stream.\r\t\t\t\texponent < -1 ifTrue: [stream nextPut: $^; print: exponent negated]]].\r\t\tcount > 1 ifTrue: [stream nextPut: $)]]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '88' ],
		#self : OmReference [ '89' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.224986+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'printFullNameOn:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printFullNameOn: stream pluralized: pluralized\r\t"Print the full name of this unit, pluralized if \'pluralized\' is true."\r\t| positive negative |\r\tpositive := self includesPositiveExponents.\r\tnegative := self includesNegativeExponents.\r\tpositive ifTrue: [\r\t\tself \r\t\t\tprintUnitsWhereExponent: [:each | each > 0]\r\t\t\ton: stream\r\t\t\tpluralized: pluralized].\r\t(negative and: [positive]) ifTrue: [stream space].\r\tnegative ifTrue: [\r\t\tstream nextPutAll: \'per \'.\r\t\tself\r\t\t\tprintUnitsWhereExponent: [:each | each < 0]\r\t\t\ton: stream\r\t\t\tpluralized: false]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '89' ],
		#self : OmReference [ '90' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.225151+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'printUnitsWhereExponent:on:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printUnitsWhereExponent: block on: stream pluralized: pluralized\r\t| power first count index thisPlural |\r\tfirst := true.\r\tcount := (exponents select: block) size.\r\tindex := 0.\r\tunits with: exponents do: [:unit :exponent |\r\t\t(block value: exponent) ifTrue: [\r\t\t\tfirst ifTrue: [first := false] ifFalse: [stream space].\r\t\t\tindex := index + 1.\r\t\t\tthisPlural := pluralized and: [index = count].\r\t\t\tpower := exponent abs.\r\t\t\t(power isInteger and: [power <= 3]) ifTrue: [\r\t\t\t\tpower = 2 ifTrue: [stream nextPutAll: \'square \'].\r\t\t\t\tpower = 3 ifTrue: [stream nextPutAll: \'cubic \']].\r\t\t\tunit printFullNameOn: stream pluralized: thisPlural.\r\t\t\t(power > 3 or: [power isInteger not]) ifTrue: [\r\t\t\t\tstream\r\t\t\t\t\tnextPut: $^;\r\t\t\t\t\tprint: power]]]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '90' ],
		#self : OmReference [ '91' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.225287+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'raisedTo:',
			#protocol : #'unit arithmetic',
			#sourceCode : 'raisedTo: exponent\r\t^self class\r\t\tunits: units\r\t\texponents: (exponents collect: [:each | each * exponent])',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '91' ],
		#self : OmReference [ '92' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.225431+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #reciprocal,
			#protocol : #'unit arithmetic',
			#sourceCode : 'reciprocal\r\t"Just make a new unit of the same class, with all the exponents negated."\r\t^self class\r\t\tunits: units\r\t\texponents: (exponents collect: [:each | each negated])',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '92' ],
		#self : OmReference [ '93' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.227768+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #snarfExponents,
			#protocol : #private,
			#sourceCode : 'snarfExponents\r\t^exponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '93' ],
		#self : OmReference [ '94' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.227915+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #snarfUnits,
			#protocol : #private,
			#sourceCode : 'snarfUnits\r\t^units',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '94' ],
		#self : OmReference [ '95' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228056+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'units:exponents:',
			#protocol : #initialization,
			#sourceCode : 'units: myUnits exponents: myExponents\r\tunits := myUnits.\r\texponents := myExponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '95' ],
		#self : OmReference [ '96' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228193+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #CompoundUnit,
				#isMetaSide : false
			},
			#name : #'unitsAndExponentsDo:',
			#protocol : #enumerating,
			#sourceCode : 'unitsAndExponentsDo: block\r\tunits with: exponents do: block',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '96' ],
		#self : OmReference [ '97' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228343+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'ModifiedUnit class',
				#isMetaSide : true
			},
			#name : #'baseUnit:modification:',
			#protocol : #'instance creation',
			#sourceCode : 'baseUnit: baseUnit modification: modification\r\t^self new\r\t\tbaseUnit: baseUnit\r\t\tmodification: modification',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '97' ],
		#self : OmReference [ '98' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228472+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'=',
			#protocol : #comparing,
			#sourceCode : '= anotherUnit\r\tself class = anotherUnit class ifFalse: [^false].\r\tmodification = anotherUnit modification ifFalse: [^false].\r\t^baseUnit = anotherUnit baseUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '98' ],
		#self : OmReference [ '99' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228632+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #baseUnit,
			#protocol : #accessing,
			#sourceCode : 'baseUnit\r\t^baseUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '99' ],
		#self : OmReference [ '100' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228745+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'baseUnit:modification:',
			#protocol : #initialization,
			#sourceCode : 'baseUnit: myBaseUnit modification: myModification\r\tbaseUnit := myBaseUnit.\r\tmodification := myModification',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '100' ],
		#self : OmReference [ '101' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228854+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t^self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '101' ],
		#self : OmReference [ '102' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.228998+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: anotherUnit\r\t^anotherUnit consistentWithModifiedUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '102' ],
		#self : OmReference [ '103' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229136+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: anotherBaseUnit\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '103' ],
		#self : OmReference [ '104' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229274+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: complexUnit\r\t^self consistentWith: complexUnit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '104' ],
		#self : OmReference [ '105' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229411+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithCompoundUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithCompoundUnit: compoundUnit\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '105' ],
		#self : OmReference [ '106' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229555+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithModifiedUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithModifiedUnit: modifiedUnit\r\tself class == modifiedUnit class ifFalse: [^false].\r\t^baseUnit = modifiedUnit baseUnit\r\t\tand: [modification = modifiedUnit modification]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '106' ],
		#self : OmReference [ '107' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229697+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^baseUnit conversionFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '107' ],
		#self : OmReference [ '108' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.229843+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #hash,
			#protocol : #comparing,
			#sourceCode : 'hash\r\t^modification hash bitXor: baseUnit hash',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '108' ],
		#self : OmReference [ '109' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230001+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #isBaseUnit,
			#protocol : #predicates,
			#sourceCode : 'isBaseUnit\r\t"ModifiedUnits are effectively new base units..."\r\t^true',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '109' ],
		#self : OmReference [ '110' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230139+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #modification,
			#protocol : #accessing,
			#sourceCode : 'modification\r\t^modification',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '110' ],
		#self : OmReference [ '111' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230259+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'printAbbreviationOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviationOn: stream\r\tbaseUnit printAbbreviationOn: stream.\r\tstream nextPut: $(.\r\tmodification isString\r\t\tifTrue: [stream nextPutAll: modification]\r\t\tifFalse: [stream print: modification].\r\tstream nextPut: $)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '111' ],
		#self : OmReference [ '112' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230412+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #ModifiedUnit,
				#isMetaSide : false
			},
			#name : #'printFullNameOn:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printFullNameOn: stream pluralized: pluralized\r\tbaseUnit printFullNameOn: stream pluralized: pluralized.\r\tstream nextPutAll: \' (of \'.\r\t"Can\'t avoid the #isString, since strings print differently than other objects,\r\t and it is valid to have non-strings as the modification."\r\tmodification isString\r\t\tifTrue: [stream nextPutAll: modification]\r\t\tifFalse: [stream print: modification].\r\tstream nextPut: $)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '112' ],
		#self : OmReference [ '113' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230566+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #'addUnit:plural:abbreviation:',
			#protocol : #initialization,
			#sourceCode : 'addUnit: unitName plural: pluralName abbreviation: abbreviation\r\t| unit |\r\tunit := self new\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName.\r\tSIUnitsByName at: unitName put: unit.\r\tSIUnitsByPluralName at: pluralName put: unit.\r\tSIUnitsByAbbreviation at: abbreviation put: unit.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '113' ],
		#self : OmReference [ '114' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230736+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #ampere,
			#protocol : #'base units',
			#sourceCode : 'ampere\r\r\t^self withSingularName: \'ampere\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '114' ],
		#self : OmReference [ '115' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.230908+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #amperes,
			#protocol : #'base units',
			#sourceCode : 'amperes\r\r\t^self ampere',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '115' ],
		#self : OmReference [ '116' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231052+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #basePair,
			#protocol : #example,
			#sourceCode : 'basePair\r\r\t^self withPluralName: \'base pair\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '116' ],
		#self : OmReference [ '117' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231188+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #basePairs,
			#protocol : #example,
			#sourceCode : 'basePairs\r\r\t^ self withPluralName: \'base pairs\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '117' ],
		#self : OmReference [ '118' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231315+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #candela,
			#protocol : #'base units',
			#sourceCode : 'candela\r\r\t^self withSingularName: \'candela\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '118' ],
		#self : OmReference [ '119' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231447+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #donut,
			#protocol : #example,
			#sourceCode : 'donut\r\r\t^ self withSingularName: \'donut\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '119' ],
		#self : OmReference [ '120' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231573+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #donuts,
			#protocol : #example,
			#sourceCode : 'donuts\r\r\t^ self donut',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '120' ],
		#self : OmReference [ '121' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231726+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #initializeClass,
			#protocol : #initialization,
			#sourceCode : 'initializeClass\r\t"BaseUnit initializeClass."\r\t"Do not rename this to #initialize."\r\tPrintAbbreviated := false.  "may as well do it here ..."\r\tSIUnitsByName := Dictionary new.\r\tSIUnitsByAbbreviation := Dictionary new.\r\tSIUnitsByPluralName := Dictionary new.\r\tself\r\t\taddUnit: \'kilogram\' plural: \'kilograms\' abbreviation: \'kg\';\r\t\taddUnit: \'metre\' plural: \'metres\' abbreviation: \'m\';\r\t\taddUnit: \'second\' plural: \'seconds\' abbreviation: \'s\';\r\t\taddUnit: \'candela\' plural: \'candela\' abbreviation: \'cd\';\r\t\taddUnit: \'mole\' plural: \'moles\' abbreviation: \'mol\';\r\t\taddUnit: \'ampere\' plural: \'amperes\' abbreviation: \'A\';\r\t\t"Kelvin is defined in subclass"\r\t\taddUnit: \'radian\' plural: \'radians\' abbreviation: \'rad\';\r\t\taddUnit: \'base pair\' plural: \'base pairs\' abbreviation: \'BP\';  "for DNA"\r\t\taddUnit: \'donut\' plural: \'donuts\' abbreviation: \'donut\';\r\t\taddUnit: \'volt\' plural: \'volts\' abbreviation: \'V\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '121' ],
		#self : OmReference [ '122' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.231869+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #kelvin,
			#protocol : #'base units',
			#sourceCode : 'kelvin\r\r\t^self withSingularName: \'kelvin\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '122' ],
		#self : OmReference [ '123' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232007+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #kilogram,
			#protocol : #'base units',
			#sourceCode : 'kilogram\r\r\t^self withSingularName: \'kilogram\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '123' ],
		#self : OmReference [ '124' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232138+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #kilograms,
			#protocol : #'base units',
			#sourceCode : 'kilograms\r\r\t^ self kilogram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '124' ],
		#self : OmReference [ '125' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232274+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #meter,
			#protocol : #'base units',
			#sourceCode : 'meter\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '125' ],
		#self : OmReference [ '126' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232414+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #meters,
			#protocol : #'base units',
			#sourceCode : 'meters\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '126' ],
		#self : OmReference [ '127' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232551+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #metre,
			#protocol : #'base units',
			#sourceCode : 'metre\r\r\t^self withSingularName: \'metre\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '127' ],
		#self : OmReference [ '128' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232691+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #metres,
			#protocol : #'base units',
			#sourceCode : 'metres\r\r\t^ self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '128' ],
		#self : OmReference [ '129' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232828+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #mole,
			#protocol : #'base units',
			#sourceCode : 'mole\r\r\t^self withSingularName: \'mole\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '129' ],
		#self : OmReference [ '130' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.232967+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #moles,
			#protocol : #'base units',
			#sourceCode : 'moles\r\r\t^self mole',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '130' ],
		#self : OmReference [ '131' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233111+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #second,
			#protocol : #'base units',
			#sourceCode : 'second\r\r\t^self withSingularName: \'second\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '131' ],
		#self : OmReference [ '132' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233248+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #seconds,
			#protocol : #'base units',
			#sourceCode : 'seconds\r\r\t^ self second',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '132' ],
		#self : OmReference [ '133' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233385+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #volt,
			#protocol : #'base units',
			#sourceCode : 'volt\r\r\t^self withSingularName: \'volt\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '133' ],
		#self : OmReference [ '134' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233523+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #volts,
			#protocol : #'base units',
			#sourceCode : 'volts\r\r\t^self volt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '134' ],
		#self : OmReference [ '135' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233665+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #'withAbbreviation:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withAbbreviation: abbreviation ifAbsent: exceptionBlock\r\t^SIUnitsByAbbreviation\r\t\tat: abbreviation\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '135' ],
		#self : OmReference [ '136' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233807+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #'withPluralName:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withPluralName: unitName ifAbsent: exceptionBlock\r\t^SIUnitsByPluralName\r\t\tat: unitName\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '136' ],
		#self : OmReference [ '137' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.233947+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'BaseUnit class',
				#isMetaSide : true
			},
			#name : #'withSingularName:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withSingularName: unitName ifAbsent: exceptionBlock\r\t^SIUnitsByName\r\t\tat: unitName\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '137' ],
		#self : OmReference [ '138' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234117+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t"This is already a base unit."\r\t^self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '138' ],
		#self : OmReference [ '139' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234265+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: unit\r\t^unit consistentWithBaseUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '139' ],
		#self : OmReference [ '140' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234402+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: unit\r\t^self == unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '140' ],
		#self : OmReference [ '141' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234539+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: complexUnit\r\t^self consistentWith: complexUnit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '141' ],
		#self : OmReference [ '142' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.23467+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^1.  "by definition"',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '142' ],
		#self : OmReference [ '143' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234802+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #isBaseUnit,
			#protocol : #predicates,
			#sourceCode : 'isBaseUnit\r\t^true',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '143' ],
		#self : OmReference [ '144' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.234942+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #BaseUnit,
				#isMetaSide : false
			},
			#name : #'storeOn:',
			#protocol : #printing,
			#sourceCode : 'storeOn: aStream\r\t"Store the code to lookup the receiver instead of for a new instance."\r\t\r\taStream\r\t\tnextPutAll: \'(BaseUnit withPluralName: \'\'\';\r\t\tnextPutAll: self pluralName;\r\t\tnextPutAll: \'\'\')\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '144' ],
		#self : OmReference [ '145' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235091+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureBaseUnit,
				#isMetaSide : false
			},
			#name : #'isZeroAsValue:',
			#protocol : #predicates,
			#sourceCode : 'isZeroAsValue: value\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '145' ],
		#self : OmReference [ '146' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235235+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureBaseUnit,
				#isMetaSide : false
			},
			#name : #'uncheckedConvertFrom:',
			#protocol : #conversion,
			#sourceCode : 'uncheckedConvertFrom: anotherUnitValue\r\t| newValue |\r\tnewValue :=\r\t\t(anotherUnitValue value - anotherUnitValue unitPart additiveFactor) *\r\t\t(anotherUnitValue unit conversionFactorTo: self).\r\t^UnitValue unit: self value: newValue',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '146' ],
		#self : OmReference [ '147' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235378+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'DerivedUnit class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:pluralName:value:',
			#protocol : #'instance creation',
			#sourceCode : 'abbreviation: abbreviation name: unitName pluralName: pluralName value: unitValue\r\t| unit |\r\tunit := super\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName.\r\tunit value: unitValue.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '147' ],
		#self : OmReference [ '148' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235521+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t^unitValue unit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '148' ],
		#self : OmReference [ '149' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.23566+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: unit\r\t"Short-circuit the double dispatching here."\r\t^unitValue unitPart consistentWith: unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '149' ],
		#self : OmReference [ '150' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235793+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: baseUnit\r\t^baseUnit consistentWith: self unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '150' ],
		#self : OmReference [ '151' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.235925+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: complexUnit\r\t^complexUnit consistentWith: self unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '151' ],
		#self : OmReference [ '152' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236058+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithCompoundUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithCompoundUnit: compoundUnit\r\t^compoundUnit consistentWith: self unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '152' ],
		#self : OmReference [ '153' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236192+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithModifiedUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithModifiedUnit: modifiedUnit\r\t^modifiedUnit consistentWith: self unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '153' ],
		#self : OmReference [ '154' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.23633+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^unitValue value * unitValue unit conversionFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '154' ],
		#self : OmReference [ '155' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236466+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #unit,
			#protocol : #accessing,
			#sourceCode : 'unit\r\t^unitValue unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '155' ],
		#self : OmReference [ '156' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236602+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #DerivedUnit,
				#isMetaSide : false
			},
			#name : #'value:',
			#protocol : #initialization,
			#sourceCode : 'value: myUnitValue\r\tunitValue := myUnitValue',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '156' ],
		#self : OmReference [ '157' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236749+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'TemperatureUnit class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:pluralName:value:additiveFactor:',
			#protocol : #'instance creation',
			#sourceCode : 'abbreviation: abbreviation\rname: unitName\rpluralName: pluralName\rvalue: unitValue\radditiveFactor: additiveFactor\r\t| unit |\r\tunit := super\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName\r\t\tvalue: unitValue.\r\tunit additiveFactor: additiveFactor.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '157' ],
		#self : OmReference [ '158' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.236893+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureUnit,
				#isMetaSide : false
			},
			#name : #additiveFactor,
			#protocol : #accessing,
			#sourceCode : 'additiveFactor\r\t^additiveFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '158' ],
		#self : OmReference [ '159' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237034+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureUnit,
				#isMetaSide : false
			},
			#name : #'additiveFactor:',
			#protocol : #initialization,
			#sourceCode : 'additiveFactor: myAdditiveFactor\r\tadditiveFactor := myAdditiveFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '159' ],
		#self : OmReference [ '160' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237143+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureUnit,
				#isMetaSide : false
			},
			#name : #'isZeroAsValue:',
			#protocol : #predicates,
			#sourceCode : 'isZeroAsValue: value\r\t',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '160' ],
		#self : OmReference [ '161' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237322+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TemperatureUnit,
				#isMetaSide : false
			},
			#name : #'uncheckedConvertFrom:',
			#protocol : #conversion,
			#sourceCode : 'uncheckedConvertFrom: anotherUnitValue\r\t| kelvin newValue |\r\t^anotherUnitValue unit isBaseUnit\r\t\tifTrue: [\r\t\t\tnewValue :=\r\t\t\t\t(anotherUnitValue value / \r\t\t\t\t\t(self conversionFactorTo: anotherUnitValue unit)) + additiveFactor.\r\t\t\tUnitValue\r\t\t\t\tunit: self\r\t\t\t\tvalue: newValue]\r\t\tifFalse: [\r\t\t\tkelvin := anotherUnitValue uncheckedConvertTo: Unit kelvin.\r\t\t\tkelvin convertTo: self]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '161' ],
		#self : OmReference [ '162' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237471+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:pluralName:',
			#protocol : #'instance creation',
			#sourceCode : 'abbreviation: abbreviation name: unitName pluralName: pluralName\r\t"Create and index a new NamedUnit."\r\t| unit |\r\tunit := self new\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName.\r\tUnitsByAbbreviation at: abbreviation put: unit.\r\tUnitsByName at: unitName put: unit.\r\tUnitsByPluralName at: pluralName put: unit.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '162' ],
		#self : OmReference [ '163' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237618+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:pluralName:value:',
			#protocol : #'instance creation',
			#sourceCode : 'abbreviation: abbreviation name: unitName pluralName: pluralName value: unitValue\r\t^DerivedUnit\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName\r\t\tvalue: unitValue',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '163' ],
		#self : OmReference [ '164' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237756+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'abbreviation:name:pluralName:value:additiveFactor:',
			#protocol : #'instance creation',
			#sourceCode : 'abbreviation: abbreviation\rname: unitName\rpluralName: pluralName\rvalue: unitValue\radditiveFactor: additiveFactor\r\t^TemperatureUnit\r\t\tabbreviation: abbreviation\r\t\tname: unitName\r\t\tpluralName: pluralName\r\t\tvalue: unitValue\r\t\tadditiveFactor: additiveFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '164' ],
		#self : OmReference [ '165' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.237892+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeAreaUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeAreaUnits\r\tself\r\t\tabbreviation: \'acre\'\r\t\tname: \'acre\'\r\t\tpluralName: \'acres\'\r\t\tvalue: (4046.87260987 units: Unit metre squared).\r\tself\r\t\tabbreviation: \'a\'\r\t\tname: \'are\'\r\t\tpluralName: \'ares\'\r\t\tvalue: (100 units: Unit metre squared)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '165' ],
		#self : OmReference [ '166' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238027+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeClass,
			#protocol : #initialization,
			#sourceCode : 'initializeClass\r\t"NamedUnit initializeClass."\r\t"Do not rename this to #initialize."\r\tUnitsByAbbreviation := Dictionary new.\r\tUnitsByName := Dictionary new.\r\tUnitsByPluralName := Dictionary new.\r\tself initializeUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '166' ],
		#self : OmReference [ '167' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238167+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeForceUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeForceUnits\r\tself\r\t\tabbreviation: \'N\'\r\t\tname: \'newton\'\r\t\tpluralName: \'newtons\'\r\t\tvalue: (1 units: (Unit kilogram * Unit metre) / Unit second squared)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '167' ],
		#self : OmReference [ '168' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238339+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeLengthUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeLengthUnits\r\tself\r\t\tabbreviation: \'in\'\r\t\tname: \'inch\'\r\t\tpluralName: \'inches\'\r\t\tvalue: (2.54 units: Unit centimetre).\r\tself\r\t\tabbreviation: \'ft\'\r\t\tname: \'foot\'\r\t\tpluralName: \'feet\'\r\t\tvalue: (12 units: Unit inch).\r\tself\r\t\tabbreviation: \'yd\'\r\t\tname: \'yard\'\r\t\tpluralName: \'yards\'\r\t\tvalue: (3 units: Unit foot).\r\tself\r\t\tabbreviation: \'mi\'\r\t\tname: \'mile\'\r\t\tpluralName: \'miles\'\r\t\tvalue: (5280 units: Unit foot).\r\tself\r\t\tabbreviation: \'nm\'\r\t\tname: \'nauticalmile\'\r\t\tpluralName: \'nauticalmiles\'\r\t\tvalue: (1852 units: Unit metre).\r\tself\r\t\tabbreviation: \'pt\'\r\t\tname: \'point\'\r\t\tpluralName: \'points\'\r\t\tvalue: (1/72 units: Unit inch).\r\tself\r\t\tabbreviation: \'pc\'\r\t\tname: \'pica\'\r\t\tpluralName: \'picas\'\r\t\tvalue: (12 units: Unit point).\r\tself\r\t\tabbreviation: \'px\'\r\t\tname: \'pixel\'\r\t\tpluralName: \'pixels\'\r\t\tvalue: (0.2635872 units: Unit millimetre).\r\tself\r\t\tabbreviation: \'L\'\r\t\tname: \'litre\'\r\t\tpluralName: \'litres\'\r\t\tvalue: (1/1000 units: (Unit metre raisedTo: 3)).\r\tself\r\t\tabbreviation: \'ua\'\r\t\tname: \'astronomical unit\'\r\t\tpluralName: \'astronomical units\'\r\t\tvalue: ((1.49598 raisedTo: 11) units: Unit metre).\r\tself\r\t\tabbreviation: \'angstrom\'\r\t\tname: \'angstrom\'\r\t\tpluralName:\'angstroms\'\r\t\tvalue: (1e-10 units: Unit metre)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '168' ],
		#self : OmReference [ '169' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238485+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeMassUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeMassUnits\r\t"Initialize the mass units."\r\t\r\tself\r\t\tabbreviation: \'t\'\r\t\tname: \'tonne\'\r\t\tpluralName: \'tonnes\'\r\t\tvalue: (1000 units: Unit kilogram).\r\tself\r\t\tabbreviation: \'lb\'\r\t\tname: \'pound\'\r\t\tpluralName: \'pounds\'\r\t\tvalue: (0.45359237 units: Unit kilogram).\r\tself\r\t\tabbreviation: \'oz\'\r\t\tname: \'ounce\'\r\t\tpluralName: \'ounces\'\r\t\tvalue: (1/16 units: Unit pound).\r\tself\r\t\tabbreviation: \'st\'\r\t\tname: \'stone\'\r\t\tpluralName: \'stone\'\r\t\tvalue: (14 units: Unit pound).\r\tself\r\t\tabbreviation: \'g\'\r\t\tname: \'gram\'\r\t\tpluralName: \'grams\'\r\t\tvalue: ((1/1000) units: BaseUnit kilogram).',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '169' ],
		#self : OmReference [ '170' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238629+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeOtherUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeOtherUnits\r\r\tself\r\t\tabbreviation: \'C\'\r\t\tname: \'coulomb\'\r\t\tpluralName: \'coulombs\'\r\t\tvalue: (1 units: ((Unit second) * (Unit ampere))).\r\tself\r\t\tabbreviation: \'F\'\r\t\tname: \'farad\'\r\t\tpluralName: \'farads\'\r\t\tvalue: (1 units: ((Unit coulomb) / (Unit ampere))).\r\tself\r\t\tabbreviation: \'W\'\r\t\tname: \'watt\'\r\t\tpluralName: \'watts\'\r\t\tvalue: (1 units: ((Unit ampere) * (Unit volt))).\r\t\t\r\tDerivedUnit\r\t\tabbreviation: \'deg\'\r\t\tname: \'arcdegree\'\r\t\tpluralName: \'arcdegrees\'\r\t\tvalue: (1 degreesToRadians units: Unit radian).',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '170' ],
		#self : OmReference [ '171' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238777+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeTemperatureUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeTemperatureUnits\r\tTemperatureBaseUnit\r\t\tabbreviation: \'K\'\r\t\tname: \'kelvin\'\r\t\tpluralName: \'kelvins\'.\r\tself\r\t\tabbreviation: \'°F\'\r\t\tname: \'degree Fahrenheit\'\r\t\tpluralName: \'degrees Fahrenheit\'\r\t\tvalue: (5/9 units: Unit kelvin)\r\t\tadditiveFactor: -459.67.\r\tself\r\t\tabbreviation: \'°C\'\r\t\tname: \'degree Celsius\'\r\t\tpluralName: \'degrees Celsius\'\r\t\tvalue: (1 units: Unit kelvin)\r\t\tadditiveFactor: -273.15',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '171' ],
		#self : OmReference [ '172' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.238926+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeTimeUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeTimeUnits\r\tself\r\t\tabbreviation: \'min\'\r\t\tname: \'minute\'\r\t\tpluralName: \'minutes\'\r\t\tvalue: (60 units: Unit second).\r\tself\r\t\tabbreviation: \'h\'\r\t\tname: \'hour\'\r\t\tpluralName: \'hours\'\r\t\tvalue: (60 units: Unit minute).\r\tself\r\t\tabbreviation: \'d\'\r\t\tname: \'day\'\r\t\tpluralName: \'days\'\r\t\tvalue: (24 units: Unit hour).\r\tself\r\t\tabbreviation: \'yr\'\r\t\tname: \'year\'\r\t\tpluralName: \'years\'\r\t\tvalue: (365.25 units: Unit day). "use Julian year"\r\tself\r\t\tabbreviation: \'Hz\'\r\t\tname: \'hertz\'\r\t\tpluralName: \'hertz\'\r\t\tvalue: 1 / (1 units: Unit second)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '172' ],
		#self : OmReference [ '173' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239059+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #initializeUnits,
			#protocol : #initialization,
			#sourceCode : 'initializeUnits\r\r\tself\r\t\tinitializeAreaUnits;\r\t\tinitializeLengthUnits;\r\t\tinitializeMassUnits;\r\t\tinitializeForceUnits;\r\t\tinitializeTemperatureUnits;\r\t\tinitializeTimeUnits;\r\t\tinitializeOtherUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '173' ],
		#self : OmReference [ '174' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239188+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'withAbbreviation:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withAbbreviation: abbreviation ifAbsent: exceptionBlock\r\t^UnitsByAbbreviation\r\t\tat: abbreviation\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '174' ],
		#self : OmReference [ '175' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239326+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'withPluralName:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withPluralName: pluralName ifAbsent: exceptionBlock\r\t^UnitsByPluralName\r\t\tat: pluralName\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '175' ],
		#self : OmReference [ '176' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239461+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'NamedUnit class',
				#isMetaSide : true
			},
			#name : #'withSingularName:ifAbsent:',
			#protocol : #accessing,
			#sourceCode : 'withSingularName: unitName ifAbsent: exceptionBlock\r\t^UnitsByName\r\t\tat: unitName\r\t\tifAbsent: exceptionBlock',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '176' ],
		#self : OmReference [ '177' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2396+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #abbreviation,
			#protocol : #accessing,
			#sourceCode : 'abbreviation\r\t^abbreviation',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '177' ],
		#self : OmReference [ '178' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239733+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #'abbreviation:name:pluralName:',
			#protocol : #initialization,
			#sourceCode : 'abbreviation: myAbbreviation name: myName pluralName: myPluralName\r\tabbreviation := myAbbreviation.\r\tname := myName.\r\tpluralName := myPluralName',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '178' ],
		#self : OmReference [ '179' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239854+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #name,
			#protocol : #accessing,
			#sourceCode : 'name\r\t^name',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '179' ],
		#self : OmReference [ '180' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.239976+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #pluralName,
			#protocol : #accessing,
			#sourceCode : 'pluralName\r\t^pluralName',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '180' ],
		#self : OmReference [ '181' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240101+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #'printAbbreviationOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviationOn: stream\r\tstream nextPutAll: abbreviation',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '181' ],
		#self : OmReference [ '182' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240236+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #'printFullNameOn:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printFullNameOn: stream pluralized: pluralized\r\tpluralized\r\t\tifTrue: [stream nextPutAll: pluralName]\r\t\tifFalse: [stream nextPutAll: name]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '182' ],
		#self : OmReference [ '183' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240368+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #NamedUnit,
				#isMetaSide : false
			},
			#name : #'storeOn:',
			#protocol : #printing,
			#sourceCode : 'storeOn: aStream\r\t"Store the code to lookup the receiver instead of for a new instance."\r\t\r\taStream\r\t\tnextPutAll: \'(NamedUnit withPluralName: \'\'\';\r\t\tnextPutAll: self pluralName;\r\t\tnextPutAll: \'\'\')\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '183' ],
		#self : OmReference [ '184' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240527+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'PrefixedUnit class',
				#isMetaSide : true
			},
			#name : #'prefix:unit:',
			#protocol : #'instance creation',
			#sourceCode : 'prefix: prefix unit: unit\r\t^self new prefix: prefix unit: unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '184' ],
		#self : OmReference [ '185' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240636+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'PrefixedUnit class',
				#isMetaSide : true
			},
			#name : #'prefixName:unit:',
			#protocol : #'instance creation',
			#sourceCode : 'prefixName: prefixName unit: unit\r\t| prefix |\r\tprefix := SIPrefix named: prefixName.\r\t^self prefix: prefix unit: unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '185' ],
		#self : OmReference [ '186' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240752+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'=',
			#protocol : #comparing,
			#sourceCode : '= anotherUnit\r\tself class == anotherUnit class ifFalse: [^false].\r\t^prefix = anotherUnit prefix and: [unit = anotherUnit unit]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '186' ],
		#self : OmReference [ '187' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.240948+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t^unit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '187' ],
		#self : OmReference [ '188' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.241092+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: anotherUnit\r\t"Short-circuit the double dispatching; just compare the actual unit."\r\t^anotherUnit consistentWith: unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '188' ],
		#self : OmReference [ '189' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.241226+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'consistentWithAnything:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithAnything: anotherUnit\r\t^unit consistentWith: anotherUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '189' ],
		#self : OmReference [ '190' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.241359+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t^prefix scalingFactor * unit conversionFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '190' ],
		#self : OmReference [ '191' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24149+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #hash,
			#protocol : #comparing,
			#sourceCode : 'hash\r\t^prefix hash bitXor: unit hash',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '191' ],
		#self : OmReference [ '192' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24164+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #prefix,
			#protocol : #accessing,
			#sourceCode : 'prefix\r\t^prefix',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '192' ],
		#self : OmReference [ '193' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.241757+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'prefix:unit:',
			#protocol : #initialization,
			#sourceCode : 'prefix: myPrefix unit: myUnit\r\tprefix := myPrefix.\r\tunit := myUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '193' ],
		#self : OmReference [ '194' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.241867+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'prefixedBy:',
			#protocol : #conversion,
			#sourceCode : 'prefixedBy: prefixName\r\t^self error: \'This unit already has a prefix.\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '194' ],
		#self : OmReference [ '195' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242007+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'printAbbreviationOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviationOn: stream\r\tstream nextPutAll: prefix abbreviation.\r\tunit printAbbreviationOn: stream',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '195' ],
		#self : OmReference [ '196' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242147+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #'printFullNameOn:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printFullNameOn: stream pluralized: pluralized\r\tstream nextPutAll: prefix name.\r\tunit printFullNameOn: stream pluralized: pluralized',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '196' ],
		#self : OmReference [ '197' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242284+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #PrefixedUnit,
				#isMetaSide : false
			},
			#name : #unit,
			#protocol : #accessing,
			#sourceCode : 'unit\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '197' ],
		#self : OmReference [ '198' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242392+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #A,
			#protocol : #'SI base units',
			#sourceCode : 'A\r\r\t^ self ampere',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '198' ],
		#self : OmReference [ '199' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242521+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #C,
			#protocol : #'miscellaneous units',
			#sourceCode : 'C\r\r\t^ self coulomb',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '199' ],
		#self : OmReference [ '200' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242643+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #F,
			#protocol : #'miscellaneous units',
			#sourceCode : 'F\r\r\t^ self farad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '200' ],
		#self : OmReference [ '201' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242766+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #GHz,
			#protocol : #'time units',
			#sourceCode : 'GHz\r\r\t^self gigahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '201' ],
		#self : OmReference [ '202' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.242889+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #Hz,
			#protocol : #'time units',
			#sourceCode : 'Hz\r\r\t^self hertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '202' ],
		#self : OmReference [ '203' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24301+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #K,
			#protocol : #'SI base units',
			#sourceCode : 'K\r\r\t^self kelvin ',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '203' ],
		#self : OmReference [ '204' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243136+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #MHz,
			#protocol : #'time units',
			#sourceCode : 'MHz\r\r\t^self megahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '204' ],
		#self : OmReference [ '205' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243264+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #Mt,
			#protocol : #'mass units',
			#sourceCode : 'Mt\r\r\t^self megatonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '205' ],
		#self : OmReference [ '206' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24339+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #a,
			#protocol : #'area units',
			#sourceCode : 'a\r\r\t^ self are',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '206' ],
		#self : OmReference [ '207' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243525+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ampere,
			#protocol : #'miscellaneous units',
			#sourceCode : 'ampere\r\r\t^ BaseUnit ampere',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '207' ],
		#self : OmReference [ '208' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243652+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #amperes,
			#protocol : #'miscellaneous units',
			#sourceCode : 'amperes\r\r\t^ self ampere',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '208' ],
		#self : OmReference [ '209' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243777+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #angstrom,
			#protocol : #'mass units',
			#sourceCode : 'angstrom\r\r\t^NamedUnit named: \'angstrom\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '209' ],
		#self : OmReference [ '210' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.243903+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #angstroms,
			#protocol : #'mass units',
			#sourceCode : 'angstroms\r\r\t^self angstrom',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '210' ],
		#self : OmReference [ '211' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244029+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #arcdegree,
			#protocol : #'miscellaneous units',
			#sourceCode : 'arcdegree\r\r\t^ NamedUnit named: \'arcdegree\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '211' ],
		#self : OmReference [ '212' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244154+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #arcdegrees,
			#protocol : #'miscellaneous units',
			#sourceCode : 'arcdegrees\r\r\t^ self arcdegree',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '212' ],
		#self : OmReference [ '213' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244278+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #are,
			#protocol : #'area units',
			#sourceCode : 'are\r\r\t^ NamedUnit named: \'are\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '213' ],
		#self : OmReference [ '214' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244407+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ares,
			#protocol : #'area units',
			#sourceCode : 'ares\r\r\t^ self are',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '214' ],
		#self : OmReference [ '215' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244533+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #candela,
			#protocol : #'miscellaneous units',
			#sourceCode : 'candela\r\r\t^ BaseUnit candela',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '215' ],
		#self : OmReference [ '216' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244665+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #cd,
			#protocol : #'SI base units',
			#sourceCode : 'cd\r\r\t^self candela',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '216' ],
		#self : OmReference [ '217' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244789+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #centimeter,
			#protocol : #'length units',
			#sourceCode : 'centimeter\r\r\t^ self centimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '217' ],
		#self : OmReference [ '218' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.244913+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #centimeters,
			#protocol : #'length units',
			#sourceCode : 'centimeters\r\r\t^ self centimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '218' ],
		#self : OmReference [ '219' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245038+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #centimetre,
			#protocol : #'length units',
			#sourceCode : 'centimetre\r\r\t^ self metre prefixedBy: \'centi\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '219' ],
		#self : OmReference [ '220' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245169+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #centimetres,
			#protocol : #'length units',
			#sourceCode : 'centimetres\r\r\t^ self centimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '220' ],
		#self : OmReference [ '221' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245298+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #cm,
			#protocol : #'length units',
			#sourceCode : 'cm\r\r\t^self centimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '221' ],
		#self : OmReference [ '222' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245431+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #commonUnits,
			#protocol : #'generalized lookup',
			#sourceCode : 'commonUnits\r\t"Answer the common units as a collection."\r\r\t^{self pixel. self point. self pica. self millimetre.\r\t\tself centimetre. self metre. self kilometre.\r\t\tself inch. self foot. self yard. self mile}',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '222' ],
		#self : OmReference [ '223' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245559+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #coulomb,
			#protocol : #'miscellaneous units',
			#sourceCode : 'coulomb\r\r\t^ NamedUnit named: \'coulomb\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '223' ],
		#self : OmReference [ '224' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245689+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #coulombs,
			#protocol : #'miscellaneous units',
			#sourceCode : 'coulombs\r\r\t^self coulomb',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '224' ],
		#self : OmReference [ '225' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.245822+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #day,
			#protocol : #'time units',
			#sourceCode : 'day\r\r\t^ NamedUnit named: \'day\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '225' ],
		#self : OmReference [ '226' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24595+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #days,
			#protocol : #'time units',
			#sourceCode : 'days\r\r\t^ self day',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '226' ],
		#self : OmReference [ '227' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246079+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #deg,
			#protocol : #'miscellaneous units',
			#sourceCode : 'deg\r\r\t^ self arcdegree',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '227' ],
		#self : OmReference [ '228' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246209+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreeCelsius,
			#protocol : #'temperature units',
			#sourceCode : 'degreeCelsius\r\r\t^ NamedUnit named: \'degree Celsius\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '228' ],
		#self : OmReference [ '229' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246337+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreeFahrenheit,
			#protocol : #'temperature units',
			#sourceCode : 'degreeFahrenheit\r\r\t^ NamedUnit named: \'degree Fahrenheit\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '229' ],
		#self : OmReference [ '230' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246467+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreeKelvin,
			#protocol : #'temperature units',
			#sourceCode : 'degreeKelvin\r\r\t^ self kelvin',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '230' ],
		#self : OmReference [ '231' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246599+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreesCelsius,
			#protocol : #'temperature units',
			#sourceCode : 'degreesCelsius\r\r\t^ self degreeCelsius',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '231' ],
		#self : OmReference [ '232' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246731+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreesFahrenheit,
			#protocol : #'temperature units',
			#sourceCode : 'degreesFahrenheit\r\r\t^ self degreeFahrenheit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '232' ],
		#self : OmReference [ '233' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.246864+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degreesKelvin,
			#protocol : #'temperature units',
			#sourceCode : 'degreesKelvin\r\r\t^ self kelvin',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '233' ],
		#self : OmReference [ '234' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247006+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #degs,
			#protocol : #'miscellaneous units',
			#sourceCode : 'degs\r\r\t^ self arcdegree',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '234' ],
		#self : OmReference [ '235' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247134+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #dy,
			#protocol : #'time units',
			#sourceCode : 'dy\r\r\t^self days',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '235' ],
		#self : OmReference [ '236' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247262+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #farad,
			#protocol : #'miscellaneous units',
			#sourceCode : 'farad\r\r\t^NamedUnit named: \'farad\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '236' ],
		#self : OmReference [ '237' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24739+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #farads,
			#protocol : #'miscellaneous units',
			#sourceCode : 'farads\r\r\t^ self farad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '237' ],
		#self : OmReference [ '238' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247525+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #feet,
			#protocol : #'length units',
			#sourceCode : 'feet\r\r\t^ self foot',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '238' ],
		#self : OmReference [ '239' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247653+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #foot,
			#protocol : #'length units',
			#sourceCode : 'foot\r\r\t^NamedUnit named: \'foot\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '239' ],
		#self : OmReference [ '240' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.24778+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ft,
			#protocol : #'length units',
			#sourceCode : 'ft\r\r\t^self foot',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '240' ],
		#self : OmReference [ '241' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.247909+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #g,
			#protocol : #'mass units',
			#sourceCode : 'g\r\r\t^ self gram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '241' ],
		#self : OmReference [ '242' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248037+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #gigahertz,
			#protocol : #'time units',
			#sourceCode : 'gigahertz\r\r\t^self hertz prefixedBy: \'giga\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '242' ],
		#self : OmReference [ '243' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248167+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #gigavolt,
			#protocol : #'power units',
			#sourceCode : 'gigavolt\r\r\t^ self volt prefixedBy: \'giga\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '243' ],
		#self : OmReference [ '244' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248297+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #gram,
			#protocol : #'mass units',
			#sourceCode : 'gram\r\r\t^NamedUnit named: \'gram\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '244' ],
		#self : OmReference [ '245' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248428+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #grams,
			#protocol : #'mass units',
			#sourceCode : 'grams\r\r\t^ self gram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '245' ],
		#self : OmReference [ '246' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248561+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #gramsPerMole,
			#protocol : #'miscellaneous units',
			#sourceCode : 'gramsPerMole\r\r\t^ Unit gram / Unit mole',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '246' ],
		#self : OmReference [ '247' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248697+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #h,
			#protocol : #'time units',
			#sourceCode : 'h\r\r\t^ self hour',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '247' ],
		#self : OmReference [ '248' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248831+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ha,
			#protocol : #'area units',
			#sourceCode : 'ha\r\r\t^ self hectare',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '248' ],
		#self : OmReference [ '249' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.248963+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #hectare,
			#protocol : #'area units',
			#sourceCode : 'hectare\r\r\t^ self are prefixedBy: \'hecto\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '249' ],
		#self : OmReference [ '250' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.249093+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #hectares,
			#protocol : #'area units',
			#sourceCode : 'hectares\r\r\t^ self hectare',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '250' ],
		#self : OmReference [ '251' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.249229+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #hertz,
			#protocol : #'time units',
			#sourceCode : 'hertz\r\t^NamedUnit named: \'hertz\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '251' ],
		#self : OmReference [ '252' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.249364+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #hour,
			#protocol : #'time units',
			#sourceCode : 'hour\r\r\t^ NamedUnit named: \'hour\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '252' ],
		#self : OmReference [ '253' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.249493+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #hours,
			#protocol : #'time units',
			#sourceCode : 'hours\r\r\t^ self hour',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '253' ],
		#self : OmReference [ '254' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.249623+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #in,
			#protocol : #'length units',
			#sourceCode : 'in\r\r\t^self inch',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '254' ],
		#self : OmReference [ '255' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.251617+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #inch,
			#protocol : #'length units',
			#sourceCode : 'inch\r\r\t^ NamedUnit named: \'inch\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '255' ],
		#self : OmReference [ '256' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.251782+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #inches,
			#protocol : #'length units',
			#sourceCode : 'inches\r\r\t^ self inch',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '256' ],
		#self : OmReference [ '257' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.251937+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #initialize,
			#protocol : #'class initialization',
			#sourceCode : 'initialize\r\t"Unit initialize."\r\t"This is the master \'initialize\' method.  It calls the #initializeClass methods of the\r\t classes in this package *in the appropriate order*.  The reason I don\'t just have the\r\t fileout code call #initialize for each class that needs initialization is that this\r\t package depends on classes being initialized in a certain order, and the \'topological\'\r\t fileout order generated by some Smalltalks does not match this order."\r\tSIPrefix initializeClass.\r\tBaseUnit initializeClass.\r\tNamedUnit initializeClass',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '257' ],
		#self : OmReference [ '258' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.252101+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kHz,
			#protocol : #'time units',
			#sourceCode : 'kHz\r\r\t^self kilohertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '258' ],
		#self : OmReference [ '259' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.252234+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kelvin,
			#protocol : #'temperature units',
			#sourceCode : 'kelvin\r\r\t^ NamedUnit named: \'kelvin\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '259' ],
		#self : OmReference [ '260' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.252369+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kelvins,
			#protocol : #'temperature units',
			#sourceCode : 'kelvins\r\r\t^self kelvin ',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '260' ],
		#self : OmReference [ '261' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2525+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kg,
			#protocol : #'SI base units',
			#sourceCode : 'kg\r\r\t^self kilogram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '261' ],
		#self : OmReference [ '262' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25264+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilogram,
			#protocol : #'mass units',
			#sourceCode : 'kilogram\r\r\t^ BaseUnit kilogram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '262' ],
		#self : OmReference [ '263' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.252771+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilograms,
			#protocol : #'mass units',
			#sourceCode : 'kilograms\r\r\t^ self kilogram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '263' ],
		#self : OmReference [ '264' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.252905+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilohertz,
			#protocol : #'time units',
			#sourceCode : 'kilohertz\r\r\t^self hertz prefixedBy: \'kilo\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '264' ],
		#self : OmReference [ '265' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253038+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilometer,
			#protocol : #'length units',
			#sourceCode : 'kilometer\r\r\t^ self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '265' ],
		#self : OmReference [ '266' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253177+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilometers,
			#protocol : #'length units',
			#sourceCode : 'kilometers\r\r\t^ self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '266' ],
		#self : OmReference [ '267' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253315+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilometre,
			#protocol : #'length units',
			#sourceCode : 'kilometre\r\r\t^ self metre prefixedBy: \'kilo\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '267' ],
		#self : OmReference [ '268' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253449+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilometres,
			#protocol : #'length units',
			#sourceCode : 'kilometres\r\r\t^ self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '268' ],
		#self : OmReference [ '269' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25359+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilovolt,
			#protocol : #'power units',
			#sourceCode : 'kilovolt\r\r\t^ self volt prefixedBy: \'kilo\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '269' ],
		#self : OmReference [ '270' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253722+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #kilowatt,
			#protocol : #'power units',
			#sourceCode : 'kilowatt\r\r\t^ self watt prefixedBy: \'kilo\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '270' ],
		#self : OmReference [ '271' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.253882+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #km,
			#protocol : #'length units',
			#sourceCode : 'km\r\r\t^self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '271' ],
		#self : OmReference [ '272' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254017+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #lb,
			#protocol : #'mass units',
			#sourceCode : 'lb\r\r\t^self pound',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '272' ],
		#self : OmReference [ '273' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254151+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #liter,
			#protocol : #'miscellaneous units',
			#sourceCode : 'liter\r\r\t^ self litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '273' ],
		#self : OmReference [ '274' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254291+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #liters,
			#protocol : #'miscellaneous units',
			#sourceCode : 'liters\r\r\t^ self litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '274' ],
		#self : OmReference [ '275' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254423+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #litre,
			#protocol : #'miscellaneous units',
			#sourceCode : 'litre\r\r\t^ NamedUnit named: \'litre\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '275' ],
		#self : OmReference [ '276' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254555+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #litres,
			#protocol : #'miscellaneous units',
			#sourceCode : 'litres\r\r\t^ self litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '276' ],
		#self : OmReference [ '277' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25469+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #m,
			#protocol : #'SI base units',
			#sourceCode : 'm\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '277' ],
		#self : OmReference [ '278' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254823+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #megahertz,
			#protocol : #'time units',
			#sourceCode : 'megahertz\r\r\t^self hertz prefixedBy: \'mega\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '278' ],
		#self : OmReference [ '279' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.254957+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #megatonnes,
			#protocol : #'mass units',
			#sourceCode : 'megatonnes\r\r\t^self tonne prefixedBy: \'mega\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '279' ],
		#self : OmReference [ '280' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.255089+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #megavolt,
			#protocol : #'power units',
			#sourceCode : 'megavolt\r\r\t^ self volt prefixedBy: \'mega\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '280' ],
		#self : OmReference [ '281' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25522+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #meter,
			#protocol : #'length units',
			#sourceCode : 'meter\r\r\t^ self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '281' ],
		#self : OmReference [ '282' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.255355+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #meters,
			#protocol : #'length units',
			#sourceCode : 'meters\r\r\t^ self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '282' ],
		#self : OmReference [ '283' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.255498+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #metre,
			#protocol : #'length units',
			#sourceCode : 'metre\r\r\t^ BaseUnit metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '283' ],
		#self : OmReference [ '284' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25563+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #metres,
			#protocol : #'length units',
			#sourceCode : 'metres\r\r\t^ self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '284' ],
		#self : OmReference [ '285' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.255764+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mg,
			#protocol : #'mass units',
			#sourceCode : 'mg\r\r\t^self milligram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '285' ],
		#self : OmReference [ '286' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.255898+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mi,
			#protocol : #'length units',
			#sourceCode : 'mi\r\r\t^self mile',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '286' ],
		#self : OmReference [ '287' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256031+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #microgram,
			#protocol : #'mass units',
			#sourceCode : 'microgram\r\r\t^self gram prefixedBy: \'micro\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '287' ],
		#self : OmReference [ '288' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256164+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #micrograms,
			#protocol : #'mass units',
			#sourceCode : 'micrograms\r\r\t^self microgram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '288' ],
		#self : OmReference [ '289' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2563+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mile,
			#protocol : #'length units',
			#sourceCode : 'mile\r\r\t^NamedUnit named: \'mile\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '289' ],
		#self : OmReference [ '290' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256439+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #miles,
			#protocol : #'length units',
			#sourceCode : 'miles\r\r\t^ self mile',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '290' ],
		#self : OmReference [ '291' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.25658+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #milliamp,
			#protocol : #'power units',
			#sourceCode : 'milliamp\r\r\t^ self ampere prefixedBy: \'milli\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '291' ],
		#self : OmReference [ '292' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256715+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #milligram,
			#protocol : #'mass units',
			#sourceCode : 'milligram\r\r\t^self gram prefixedBy: \'milli\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '292' ],
		#self : OmReference [ '293' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256847+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #milligrams,
			#protocol : #'mass units',
			#sourceCode : 'milligrams\r\r\t^self milligram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '293' ],
		#self : OmReference [ '294' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.256982+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #millimeter,
			#protocol : #'length units',
			#sourceCode : 'millimeter\r\r\t^ self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '294' ],
		#self : OmReference [ '295' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257118+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #millimeters,
			#protocol : #'length units',
			#sourceCode : 'millimeters\r\r\t^ self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '295' ],
		#self : OmReference [ '296' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257256+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #millimetre,
			#protocol : #'length units',
			#sourceCode : 'millimetre\r\r\t^ self metre prefixedBy: \'milli\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '296' ],
		#self : OmReference [ '297' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257396+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #milliseconds,
			#protocol : #'time units',
			#sourceCode : 'milliseconds\r\r\t^self second prefixedBy: \'milli\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '297' ],
		#self : OmReference [ '298' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257533+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #millivolt,
			#protocol : #'power units',
			#sourceCode : 'millivolt\r\r\t^ self volt prefixedBy: \'milli\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '298' ],
		#self : OmReference [ '299' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257666+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #min,
			#protocol : #'time units',
			#sourceCode : 'min\r\r\t^self minutes',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '299' ],
		#self : OmReference [ '300' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257801+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #minute,
			#protocol : #'time units',
			#sourceCode : 'minute\r\r\t^ NamedUnit named: \'minute\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '300' ],
		#self : OmReference [ '301' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.257933+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #minutes,
			#protocol : #'time units',
			#sourceCode : 'minutes\r\r\t^ self minute',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '301' ],
		#self : OmReference [ '302' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258068+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mm,
			#protocol : #'length units',
			#sourceCode : 'mm\r\r\t^self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '302' ],
		#self : OmReference [ '303' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258202+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mol,
			#protocol : #'SI base units',
			#sourceCode : 'mol\r\r\t^ self moles',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '303' ],
		#self : OmReference [ '304' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258339+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #mole,
			#protocol : #'mass units',
			#sourceCode : 'mole\r\r\t^ BaseUnit mole',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '304' ],
		#self : OmReference [ '305' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258478+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #moles,
			#protocol : #'mass units',
			#sourceCode : 'moles\r\r\t^ self mole',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '305' ],
		#self : OmReference [ '306' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258621+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ms,
			#protocol : #'time units',
			#sourceCode : 'ms\r\r\t^self milliseconds',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '306' ],
		#self : OmReference [ '307' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258771+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'named:',
			#protocol : #'generalized lookup',
			#sourceCode : 'named: unitName\r\t^self\r\t\twithPluralName: unitName\r\t\tifAbsent: [self withSingularName: unitName]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '307' ],
		#self : OmReference [ '308' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.258912+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'named:ifAbsent:',
			#protocol : #'generalized lookup',
			#sourceCode : 'named: unitName ifAbsent: exceptionBlock\r\t^self\r\t\twithPluralName: unitName\r\t\tifAbsent: [self withSingularName: unitName ifAbsent: exceptionBlock]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '308' ],
		#self : OmReference [ '309' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259049+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #nanovolt,
			#protocol : #'power units',
			#sourceCode : 'nanovolt\r\r\t^ self volt prefixedBy: \'nano\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '309' ],
		#self : OmReference [ '310' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259185+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #newton,
			#protocol : #'miscellaneous units',
			#sourceCode : 'newton\r\r\t^NamedUnit named: \'newton\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '310' ],
		#self : OmReference [ '311' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259324+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #newtons,
			#protocol : #'miscellaneous units',
			#sourceCode : 'newtons\r\t^NamedUnit named: \'newtons\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '311' ],
		#self : OmReference [ '312' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259463+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ounce,
			#protocol : #'mass units',
			#sourceCode : 'ounce\r\r\t^NamedUnit named: \'ounce\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '312' ],
		#self : OmReference [ '313' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259602+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ounces,
			#protocol : #'mass units',
			#sourceCode : 'ounces\r\r\t^ self ounce',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '313' ],
		#self : OmReference [ '314' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259737+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #oz,
			#protocol : #'mass units',
			#sourceCode : 'oz\r\r\t^self ounce',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '314' ],
		#self : OmReference [ '315' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.259873+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pc,
			#protocol : #'length units',
			#sourceCode : 'pc\r\r\t^ self pica',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '315' ],
		#self : OmReference [ '316' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260007+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pica,
			#protocol : #'length units',
			#sourceCode : 'pica\r\r\t^ NamedUnit named: \'pica\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '316' ],
		#self : OmReference [ '317' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260139+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #picas,
			#protocol : #'length units',
			#sourceCode : 'picas\r\r\t^ self pica',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '317' ],
		#self : OmReference [ '318' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260272+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #picovolt,
			#protocol : #'power units',
			#sourceCode : 'picovolt\r\r\t^ self volt prefixedBy: \'pico\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '318' ],
		#self : OmReference [ '319' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260419+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pixel,
			#protocol : #'length units',
			#sourceCode : 'pixel\r\r\t^ NamedUnit named: \'pixel\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '319' ],
		#self : OmReference [ '320' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260553+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pixels,
			#protocol : #'length units',
			#sourceCode : 'pixels\r\r\t^ self pixel',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '320' ],
		#self : OmReference [ '321' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260693+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #point,
			#protocol : #'length units',
			#sourceCode : 'point\r\r\t^ NamedUnit named: \'point\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '321' ],
		#self : OmReference [ '322' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.260852+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #points,
			#protocol : #'length units',
			#sourceCode : 'points\r\r\t^ self point',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '322' ],
		#self : OmReference [ '323' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261028+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pound,
			#protocol : #'mass units',
			#sourceCode : 'pound\r\r\t^NamedUnit named: \'pound\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '323' ],
		#self : OmReference [ '324' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261173+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pounds,
			#protocol : #'mass units',
			#sourceCode : 'pounds\r\r\t^NamedUnit named: \'pounds\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '324' ],
		#self : OmReference [ '325' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261322+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #printAbbreviated,
			#protocol : #parameters,
			#sourceCode : 'printAbbreviated\r\t^PrintAbbreviated',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '325' ],
		#self : OmReference [ '326' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261465+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'printAbbreviated:',
			#protocol : #parameters,
			#sourceCode : 'printAbbreviated: boolean\r\t"Should we print units in abbreviated format?"\r\tPrintAbbreviated := boolean',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '326' ],
		#self : OmReference [ '327' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261604+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #pt,
			#protocol : #'length units',
			#sourceCode : 'pt\r\r\t^ self point',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '327' ],
		#self : OmReference [ '328' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261742+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #px,
			#protocol : #'length units',
			#sourceCode : 'px\r\r\t^ self pixel',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '328' ],
		#self : OmReference [ '329' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.261886+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #rad,
			#protocol : #'miscellaneous units',
			#sourceCode : 'rad\r\r\t^ self radian',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '329' ],
		#self : OmReference [ '330' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262026+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #radian,
			#protocol : #'miscellaneous units',
			#sourceCode : 'radian\r\r\t^ BaseUnit named: \'radian\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '330' ],
		#self : OmReference [ '331' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262165+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #radians,
			#protocol : #'miscellaneous units',
			#sourceCode : 'radians\r\r\t^ self rad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '331' ],
		#self : OmReference [ '332' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2623+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #s,
			#protocol : #'SI base units',
			#sourceCode : 's\r\r\t^ self second',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '332' ],
		#self : OmReference [ '333' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262437+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #second,
			#protocol : #'time units',
			#sourceCode : 'second\r\r\t^ BaseUnit second',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '333' ],
		#self : OmReference [ '334' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262574+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #seconds,
			#protocol : #'time units',
			#sourceCode : 'seconds\r\r\t^ self second',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '334' ],
		#self : OmReference [ '335' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262709+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #st,
			#protocol : #'mass units',
			#sourceCode : 'st\r\r\t^self stone',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '335' ],
		#self : OmReference [ '336' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.262849+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #stone,
			#protocol : #'mass units',
			#sourceCode : 'stone\r\r\t^NamedUnit named: \'stone\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '336' ],
		#self : OmReference [ '337' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.26299+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #t,
			#protocol : #'mass units',
			#sourceCode : 't\r\r\t^self tonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '337' ],
		#self : OmReference [ '338' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263139+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #tonne,
			#protocol : #'mass units',
			#sourceCode : 'tonne\r\r\t^NamedUnit named: \'tonne\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '338' ],
		#self : OmReference [ '339' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263283+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #tonnes,
			#protocol : #'mass units',
			#sourceCode : 'tonnes\r\r\t^ self tonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '339' ],
		#self : OmReference [ '340' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263428+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #ua,
			#protocol : #'length units',
			#sourceCode : 'ua\r\t^NamedUnit named: \'astronomical unit\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '340' ],
		#self : OmReference [ '341' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263565+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #volt,
			#protocol : #'power units',
			#sourceCode : 'volt\r\r\t^ BaseUnit volt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '341' ],
		#self : OmReference [ '342' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263706+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #volts,
			#protocol : #'power units',
			#sourceCode : 'volts\r\r\t^ BaseUnit volts',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '342' ],
		#self : OmReference [ '343' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.263842+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #watt,
			#protocol : #'power units',
			#sourceCode : 'watt\r\r\t^ NamedUnit named: \'watt\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '343' ],
		#self : OmReference [ '344' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.26398+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #watts,
			#protocol : #'power units',
			#sourceCode : 'watts\r\r\t^ NamedUnit named: \'watts\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '344' ],
		#self : OmReference [ '345' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.264124+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withAbbreviation:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withAbbreviation: abbreviation\r\t^self\r\t\twithAbbreviation: abbreviation\r\t\tifAbsent: [self error: \'There is no unit with the abbreviation \', abbreviation printString, \'.\']',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '345' ],
		#self : OmReference [ '346' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.26427+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withAbbreviation:ifAbsent:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withAbbreviation: unitName ifAbsent: exceptionBlock\r\t| unit |\r\tunit := NamedUnit withAbbreviation: unitName ifAbsent: [nil].\r\tunit isNil ifFalse: [^unit].\r\tunit := BaseUnit withAbbreviation: unitName ifAbsent: exceptionBlock.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '346' ],
		#self : OmReference [ '347' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.264412+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withPluralName:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withPluralName: unitName\r\t^self\r\t\twithPluralName: unitName\r\t\tifAbsent: [self error: \'There is no unit named \', unitName printString, \'.\']',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '347' ],
		#self : OmReference [ '348' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.264557+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withPluralName:ifAbsent:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withPluralName: unitName ifAbsent: exceptionBlock\r\t| unit |\r\tunit := NamedUnit withPluralName: unitName ifAbsent: [nil].\r\tunit isNil ifFalse: [^unit].\r\tunit := BaseUnit withPluralName: unitName ifAbsent: exceptionBlock.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '348' ],
		#self : OmReference [ '349' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.264698+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withSingularName:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withSingularName: unitName\r\t^self\r\t\twithSingularName: unitName\r\t\tifAbsent: [self error: \'There is no unit named \', unitName printString, \'.\']',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '349' ],
		#self : OmReference [ '350' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.264947+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'withSingularName:ifAbsent:',
			#protocol : #'generalized lookup',
			#sourceCode : 'withSingularName: unitName ifAbsent: exceptionBlock\r\t| unit |\r\tunit := NamedUnit withSingularName: unitName ifAbsent: [nil].\r\tunit isNil ifFalse: [^unit].\r\tunit := BaseUnit withSingularName: unitName ifAbsent: exceptionBlock.\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '350' ],
		#self : OmReference [ '351' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.26509+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #yard,
			#protocol : #'length units',
			#sourceCode : 'yard\r\r\t^ NamedUnit named: \'yard\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '351' ],
		#self : OmReference [ '352' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.265231+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #yards,
			#protocol : #'length units',
			#sourceCode : 'yards\r\r\t^ self yard',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '352' ],
		#self : OmReference [ '353' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.265375+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #yd,
			#protocol : #'length units',
			#sourceCode : 'yd\r\r\t^ self yard',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '353' ],
		#self : OmReference [ '354' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.265536+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #year,
			#protocol : #'time units',
			#sourceCode : 'year\r\r\t^ NamedUnit named: \'year\'',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '354' ],
		#self : OmReference [ '355' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.265696+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #years,
			#protocol : #'time units',
			#sourceCode : 'years\r\r\t^ self year',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '355' ],
		#self : OmReference [ '356' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.265838+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #yr,
			#protocol : #'time units',
			#sourceCode : 'yr\r\r\t^self year',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '356' ],
		#self : OmReference [ '357' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266027+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'Unit class',
				#isMetaSide : true
			},
			#name : #'µg',
			#protocol : #'mass units',
			#sourceCode : 'µg\r\r\t^self microgram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '357' ],
		#self : OmReference [ '358' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266151+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'*',
			#protocol : #'unit arithmetic',
			#sourceCode : '* anotherUnit\r\t^self multipliedBy: anotherUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '358' ],
		#self : OmReference [ '359' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266271+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #/,
			#protocol : #'unit arithmetic',
			#sourceCode : '/ anotherUnit\r\t^self dividedBy: anotherUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '359' ],
		#self : OmReference [ '360' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266394+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #abbreviation,
			#protocol : #accessing,
			#sourceCode : 'abbreviation\r\t"Answer an abbreviation for the receiver."\r\t| stream |\r\tstream := WriteStream on: String new.\r\tself printAbbreviationOn: stream.\r\t^stream contents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '360' ],
		#self : OmReference [ '361' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266513+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #additiveFactor,
			#protocol : #conversion,
			#sourceCode : 'additiveFactor\r\t"Only TemperatureUnits have additive factors."\r\t^0',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '361' ],
		#self : OmReference [ '362' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266638+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #conversion,
			#sourceCode : 'baseUnits\r\t"Answer a Unit object that represents the receiver in reduced form (i.e., with all \'complex\' units replaced by SI units)."\r\tself subclassResponsibility',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '362' ],
		#self : OmReference [ '363' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266762+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: unit\r\t"Is the receiver \'consistent\' with the argument?  Two units must be consistent in order to be added or subtracted."\r\tself subclassResponsibility',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '363' ],
		#self : OmReference [ '364' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.266883+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWithAnything:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithAnything: anotherUnit\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '364' ],
		#self : OmReference [ '365' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267003+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWithBaseUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithBaseUnit: baseUnit\r\t^self consistentWithAnything: baseUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '365' ],
		#self : OmReference [ '366' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267128+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWithComplexUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithComplexUnit: compositeUnit\r\t^self consistentWithAnything: compositeUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '366' ],
		#self : OmReference [ '367' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267258+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWithCompoundUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithCompoundUnit: compositeUnit\r\t^self consistentWithAnything: compositeUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '367' ],
		#self : OmReference [ '368' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267378+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'consistentWithModifiedUnit:',
			#protocol : #consistency,
			#sourceCode : 'consistentWithModifiedUnit: modifiedUnit\r\t^self consistentWithAnything: modifiedUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '368' ],
		#self : OmReference [ '369' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267504+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #conversionFactor,
			#protocol : #conversion,
			#sourceCode : 'conversionFactor\r\t"Answer the factor by which the receiver is larger than the base units from which it is composed."\r\t^self subclassResponsibility',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '369' ],
		#self : OmReference [ '370' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267639+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'conversionFactorTo:',
			#protocol : #conversion,
			#sourceCode : 'conversionFactorTo: anotherUnit\r\t"Assuming the receiver is consistent with \'anotherUnit\', answer a number which represents the amount that a value with the receiver as a unit must be multiplied by to convert to \'anotherUnit\' (got it?)"\r\t^self conversionFactor / anotherUnit conversionFactor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '370' ],
		#self : OmReference [ '371' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.267762+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'dividedBy:',
			#protocol : #'unit arithmetic',
			#sourceCode : 'dividedBy: anotherUnit\r\t^self multipliedBy: anotherUnit reciprocal',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '371' ],
		#self : OmReference [ '372' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.26789+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'factor:',
			#protocol : #conversion,
			#sourceCode : 'factor: anotherUnit\r\t"Factor with respect \'anotherUnit\'; answer a new unit equivalent to the receiver."\r\t| thisBase argumentBase result |\r\tthisBase := self baseUnits.\r\targumentBase := anotherUnit baseUnits.\r\tresult := thisBase dividedBy: argumentBase.\r\t^anotherUnit multipliedBy: result',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '372' ],
		#self : OmReference [ '373' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268015+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #isBaseUnit,
			#protocol : #predicates,
			#sourceCode : 'isBaseUnit\r\t"Answer true if the receiver represents a simple SI base unit with no modifications."\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '373' ],
		#self : OmReference [ '374' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268138+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #isComplexUnit,
			#protocol : #testing,
			#sourceCode : 'isComplexUnit\r\t^ false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '374' ],
		#self : OmReference [ '375' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268258+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #isNull,
			#protocol : #predicates,
			#sourceCode : 'isNull\r\t^false',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '375' ],
		#self : OmReference [ '376' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268392+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'isZeroAsValue:',
			#protocol : #predicates,
			#sourceCode : 'isZeroAsValue: value\r\t"If \'value\' were the value of a UnitValue with this unit,\rwould it equal zero?  Most units are absolute (e.g., length) so this\ranswers true for zero values.  Some units are not; for example\rthe Celsius and Fahrenheit temperature scales."\r\t^value isZero',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '376' ],
		#self : OmReference [ '377' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268519+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'modify:',
			#protocol : #conversion,
			#sourceCode : 'modify: modification\r\t"Answer a ModifiedUnit with the receiver and the given modification."\r\tself isBaseUnit ifFalse: [self error: \'You can only modify base units.\'].\r\t^ModifiedUnit baseUnit: self modification: modification',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '377' ],
		#self : OmReference [ '378' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268673+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'multipliedBy:',
			#protocol : #'unit arithmetic',
			#sourceCode : 'multipliedBy: anotherUnit\r\t| unitDictionary units exponents scratch |\r\tunitDictionary := Dictionary new.\r\tself unitsAndExponentsDo: [:unit :exponent |\r\t\t(unitDictionary includesKey: unit)\r\t\t\tifTrue: [unitDictionary at: unit put: (unitDictionary at: unit) + exponent]\r\t\t\tifFalse: [unitDictionary at: unit put: exponent]].\r\tanotherUnit unitsAndExponentsDo: [:unit :exponent |\r\t\t(unitDictionary includesKey: unit)\r\t\t\tifTrue: [unitDictionary at: unit put: (unitDictionary at: unit) + exponent]\r\t\t\tifFalse: [unitDictionary at: unit put: exponent]].\r\tunits := OrderedCollection new.\r\texponents := OrderedCollection new.\r\t(unitDictionary keys asSortedCollection: CompoundUnit sortBlock) do: [:unit |\r\t\tscratch := unitDictionary at: unit.\r\t\tscratch isZero ifFalse: [\r\t\t\tunits add: unit.\r\t\t\texponents add: scratch]].\r\tunits size = 1 ifTrue: [\r\t\t(exponents at: 1) = 1 ifTrue: [^units at: 1]].\r\t^ComplexUnit units: units exponents: exponents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '378' ],
		#self : OmReference [ '379' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268796+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'per:',
			#protocol : #'unit arithmetic',
			#sourceCode : 'per: anotherUnit\r\t^self dividedBy: anotherUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '379' ],
		#self : OmReference [ '380' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.268921+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #plural,
			#protocol : #accessing,
			#sourceCode : 'plural\r\t"Answer the plural for the receiver."\r\t\r\t| stream |\r\tstream := WriteStream on: String new.\r\tself printFullNameOn: stream pluralized: true.\r\t^stream contents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '380' ],
		#self : OmReference [ '381' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269043+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'prefixedBy:',
			#protocol : #conversion,
			#sourceCode : 'prefixedBy: prefixName\r\t^PrefixedUnit\r\t\tprefixName: prefixName\r\t\tunit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '381' ],
		#self : OmReference [ '382' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269172+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'printAbbreviationOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviationOn: stream\r\t"Print the receiver abbreviated."\r\tself subclassResponsibility',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '382' ],
		#self : OmReference [ '383' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2693+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'printFullNameOn:pluralized:',
			#protocol : #printing,
			#sourceCode : 'printFullNameOn: stream pluralized: pluralized\r\t"Print the full name of this unit, pluralized if \'pluralized\' is true."\r\tself subclassResponsibility',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '383' ],
		#self : OmReference [ '384' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269432+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'printOn:',
			#protocol : #printing,
			#sourceCode : 'printOn: stream\r\tsuper printOn: stream.\r\tstream nextPutAll: \' [\'.\r\tPrintAbbreviated\r\t\tifTrue: [self printAbbreviationOn: stream]\r\t\tifFalse: [self printFullNameOn: stream pluralized: true].\r\tstream nextPut: $]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '384' ],
		#self : OmReference [ '385' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269601+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'raisedTo:',
			#protocol : #'unit arithmetic',
			#sourceCode : 'raisedTo: exponent\r\t"Answer the receiver raised to the given exponent."\r\t^ComplexUnit\r\t\tunits: (Array with: self)\r\t\texponents: (Array with: exponent)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '385' ],
		#self : OmReference [ '386' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269729+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #reciprocal,
			#protocol : #'unit arithmetic',
			#sourceCode : 'reciprocal\r\t"Answer the inverse of the receiver."\r\t^ComplexUnit\r\t\tunits: (Array with: self)\r\t\texponents: (Array with: -1)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '386' ],
		#self : OmReference [ '387' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269862+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #squared,
			#protocol : #'unit arithmetic',
			#sourceCode : 'squared\r\t^self multipliedBy: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '387' ],
		#self : OmReference [ '388' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.269998+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'uncheckedConvertFrom:',
			#protocol : #conversion,
			#sourceCode : 'uncheckedConvertFrom: unitValue\r\t"This is a double-dispatching message used by UnitValue."\r\t| factor |\r\tfactor := unitValue unit conversionFactorTo: self.\r\t^UnitValue\r\t\tunit: self\r\t\tvalue: unitValue value * factor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '388' ],
		#self : OmReference [ '389' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.270129+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #unitPart,
			#protocol : #private,
			#sourceCode : 'unitPart\r\t"For compatibility with UnitValue."\r\t^self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '389' ],
		#self : OmReference [ '390' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.270266+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'unitsAndExponentsDo:',
			#protocol : #enumerating,
			#sourceCode : 'unitsAndExponentsDo: block\r\t"Evaluate the block once for each unit/exponent pair contained within the receiver.\r\t For scalar units, just evaluate the block once with \'self\', exponent 1."\r\tblock value: self value: 1',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '390' ],
		#self : OmReference [ '391' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.270398+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'value:',
			#protocol : #conversion,
			#sourceCode : 'value: number\r\t"Coerce the receiver to be a UnitValue with the given value."\r\t^UnitValue\r\t\tunit: self\r\t\tvalue: number',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '391' ],
		#self : OmReference [ '392' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.270533+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Unit,
				#isMetaSide : false
			},
			#name : #'veryDeepCopyWith:',
			#protocol : #conversion,
			#sourceCode : 'veryDeepCopyWith: deepCopier\r\t"Return self.  Don\'t copy units  Do not record me."',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '392' ],
		#self : OmReference [ '393' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.271151+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #String,
				#isMetaSide : false
			},
			#name : #asUnit,
			#protocol : #'*Units-Core',
			#sourceCode : 'asUnit\r\t"Answer the receiver as a unit."\r\t\r\t^UnitValue unitFor: self asSymbol',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '393' ],
		#self : OmReference [ '394' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.271775+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #String,
				#isMetaSide : false
			},
			#name : #asUnitValue,
			#protocol : #'*Units-Core',
			#sourceCode : 'asUnitValue\r\t"Answer the receiver as a unit value."\r\t\r\t|n p i|\r\tn := self asNumber.\r\ti := self findString: (p := n printString).\r\ti = 0 ifTrue: [^nil].\r\t^n units: (self allButFirst: p size) withBlanksTrimmed asUnit\r\t',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '394' ],
		#self : OmReference [ '395' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.272171+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Point,
				#isMetaSide : false
			},
			#name : #as,
			#protocol : #'*Units-Core',
			#sourceCode : 'as\r\t"Answer a delegate on the receiver #as: to handle the next message."\r\t\r\t^MessageDelegate on: [:m | self as: m selector]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '395' ],
		#self : OmReference [ '396' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.272429+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Point,
				#isMetaSide : false
			},
			#name : #'as:',
			#protocol : #'*Units-Core',
			#sourceCode : 'as: anotherUnit\r\t"Convert the receiver to have the same units as \'anotherUnit\'.  Apply any appropriate\r\t scaling factors.  Gives an error if the receiver\'s x and y are not consistent with \'anotherUnit\'."\r\t\r\t^(self x as: anotherUnit) @ (self y as: anotherUnit)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '396' ],
		#self : OmReference [ '397' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.27272+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Point,
				#isMetaSide : false
			},
			#name : #value,
			#protocol : #'*Units-Core',
			#sourceCode : 'value\r\t"Answer a new point with the x and y being the respective\r\tvalues of the receiver\'s ordinates."\r\t\r\t^self x value @ self y value',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '397' ],
		#self : OmReference [ '398' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.273015+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #A,
			#protocol : #'*Units-Core',
			#sourceCode : 'A\r\r\t^self units: #ampere',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '398' ],
		#self : OmReference [ '399' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.273281+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #C,
			#protocol : #'*Units-Core',
			#sourceCode : 'C\r\r\t^self units: #coulomb',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '399' ],
		#self : OmReference [ '400' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.273542+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #F,
			#protocol : #'*Units-Core',
			#sourceCode : 'F\r\r\t^self units: #farad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '400' ],
		#self : OmReference [ '401' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.273798+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #GHz,
			#protocol : #'*Units-Core',
			#sourceCode : 'GHz\r\r\t^self units: #gigahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '401' ],
		#self : OmReference [ '402' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.27406+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #GV,
			#protocol : #'*Units-Core',
			#sourceCode : 'GV\r\r\t^ self units: #gigavolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '402' ],
		#self : OmReference [ '403' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.274321+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #Hz,
			#protocol : #'*Units-Core',
			#sourceCode : 'Hz\r\r\t^self units: #hertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '403' ],
		#self : OmReference [ '404' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.274578+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #K,
			#protocol : #'*Units-Core',
			#sourceCode : 'K\r\r\t^self units: #kelvin',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '404' ],
		#self : OmReference [ '405' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.274832+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #L,
			#protocol : #'*Units-Core',
			#sourceCode : 'L\r\r\t^ self units: #litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '405' ],
		#self : OmReference [ '406' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.275093+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #MHz,
			#protocol : #'*Units-Core',
			#sourceCode : 'MHz\r\r\t^self units: #megahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '406' ],
		#self : OmReference [ '407' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.275354+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #MV,
			#protocol : #'*Units-Core',
			#sourceCode : 'MV\r\r\t^ self units: #megavolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '407' ],
		#self : OmReference [ '408' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.277543+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #Mt,
			#protocol : #'*Units-Core',
			#sourceCode : 'Mt\r\r\t^self units: #megatonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '408' ],
		#self : OmReference [ '409' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.27781+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #V,
			#protocol : #'*Units-Core',
			#sourceCode : 'V\r\r\t^self units: #volt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '409' ],
		#self : OmReference [ '410' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.278068+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #W,
			#protocol : #'*Units-Core',
			#sourceCode : 'W\r\r\t^self units: #watt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '410' ],
		#self : OmReference [ '411' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.278321+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #a,
			#protocol : #'*Units-Core',
			#sourceCode : 'a\r\r\t^ self units: #are',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '411' ],
		#self : OmReference [ '412' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.278587+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'addToUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'addToUnit: unitValue\r\r\t^unitValue class\r\t\tunit: unitValue unit\r\t\tvalue: unitValue value + self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '412' ],
		#self : OmReference [ '413' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.278853+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #angstrom,
			#protocol : #'*Units-Core',
			#sourceCode : 'angstrom\r\r\t^self units: #angstrom',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '413' ],
		#self : OmReference [ '414' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.279113+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #angstroms,
			#protocol : #'*Units-Core',
			#sourceCode : 'angstroms\r\r\t^self angstrom',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '414' ],
		#self : OmReference [ '415' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.279366+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #arcdegree,
			#protocol : #'*Units-Core',
			#sourceCode : 'arcdegree\r\r\t^self units: #arcdegree',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '415' ],
		#self : OmReference [ '416' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.279627+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #'*Units-Core',
			#sourceCode : 'baseUnits\r\r\t^ self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '416' ],
		#self : OmReference [ '417' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.279884+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #candela,
			#protocol : #'*Units-Core',
			#sourceCode : 'candela\r\r\t^self units: #candela',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '417' ],
		#self : OmReference [ '418' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.280145+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #cd,
			#protocol : #'*Units-Core',
			#sourceCode : 'cd\r\r\t^self candela',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '418' ],
		#self : OmReference [ '419' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.280395+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #celsius,
			#protocol : #'*Units-Core',
			#sourceCode : 'celsius\r\r\t^self degreeCelsius',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '419' ],
		#self : OmReference [ '420' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.28065+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #centimeter,
			#protocol : #'*Units-Core',
			#sourceCode : 'centimeter\r\r\t^self cm',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '420' ],
		#self : OmReference [ '421' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.280912+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #centimeters,
			#protocol : #'*Units-Core',
			#sourceCode : 'centimeters\r\r\t^self cm',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '421' ],
		#self : OmReference [ '422' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.281173+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #cm,
			#protocol : #'*Units-Core',
			#sourceCode : 'cm\r\r\t^self units: #centimeter',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '422' ],
		#self : OmReference [ '423' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.281432+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #degreeCelsius,
			#protocol : #'*Units-Core',
			#sourceCode : 'degreeCelsius\r\r\t^self units: #degreeCelsius',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '423' ],
		#self : OmReference [ '424' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.28169+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #degreeFahrenheit,
			#protocol : #'*Units-Core',
			#sourceCode : 'degreeFahrenheit\r\r\t^self units: #degreeFahrenheit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '424' ],
		#self : OmReference [ '425' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.281946+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #degreeKelvin,
			#protocol : #'*Units-Core',
			#sourceCode : 'degreeKelvin\r\r\t^self kelvin',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '425' ],
		#self : OmReference [ '426' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.28221+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'divideIntoUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'divideIntoUnit: unitValue\r\r\t^unitValue class\r\t\tunit: unitValue unit\r\t\tvalue: unitValue value / self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '426' ],
		#self : OmReference [ '427' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.28247+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'equalFromUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'equalFromUnit: unitValue\r\t"Is \'unitValue\' equal in magnitude to the receiver?"\r\t\r\t^unitValue value = self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '427' ],
		#self : OmReference [ '428' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.282733+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #fahrenheit,
			#protocol : #'*Units-Core',
			#sourceCode : 'fahrenheit\r\r\t^self degreeFahrenheit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '428' ],
		#self : OmReference [ '429' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.282998+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #feet,
			#protocol : #'*Units-Core',
			#sourceCode : 'feet\r\r\t^self foot',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '429' ],
		#self : OmReference [ '430' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.283279+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #foot,
			#protocol : #'*Units-Core',
			#sourceCode : 'foot\r\r\t^self units: #foot',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '430' ],
		#self : OmReference [ '431' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.283537+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #ft,
			#protocol : #'*Units-Core',
			#sourceCode : 'ft\r\r\t^self foot',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '431' ],
		#self : OmReference [ '432' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.283799+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #g,
			#protocol : #'*Units-Core',
			#sourceCode : 'g\r\r\t^self units: #gram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '432' ],
		#self : OmReference [ '433' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.284053+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #gigahertz,
			#protocol : #'*Units-Core',
			#sourceCode : 'gigahertz\r\r\t^self units: #gigahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '433' ],
		#self : OmReference [ '434' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.28433+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #grams,
			#protocol : #'*Units-Core',
			#sourceCode : 'grams\r\r\t^self g',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '434' ],
		#self : OmReference [ '435' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.284602+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #h,
			#protocol : #'*Units-Core',
			#sourceCode : 'h\r\r\t^ self units: #hour',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '435' ],
		#self : OmReference [ '436' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.284856+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #ha,
			#protocol : #'*Units-Core',
			#sourceCode : 'ha\r\r\t^ self units: #hectare',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '436' ],
		#self : OmReference [ '437' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.285113+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #hertz,
			#protocol : #'*Units-Core',
			#sourceCode : 'hertz\r\r\t^self units: #hertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '437' ],
		#self : OmReference [ '438' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.285379+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #in,
			#protocol : #'*Units-Core',
			#sourceCode : 'in\r\r\t^self units: #inch',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '438' ],
		#self : OmReference [ '439' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.285635+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #inches,
			#protocol : #'*Units-Core',
			#sourceCode : 'inches\r\r\t^self in',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '439' ],
		#self : OmReference [ '440' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.285895+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kHz,
			#protocol : #'*Units-Core',
			#sourceCode : 'kHz\r\r\t^self units: #kilohertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '440' ],
		#self : OmReference [ '441' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.286154+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kV,
			#protocol : #'*Units-Core',
			#sourceCode : 'kV\r\t^self units: #kilovolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '441' ],
		#self : OmReference [ '442' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.286418+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kW,
			#protocol : #'*Units-Core',
			#sourceCode : 'kW\r\r\t^self units: #kilowatt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '442' ],
		#self : OmReference [ '443' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.286679+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kWh,
			#protocol : #'*Units-Core',
			#sourceCode : 'kWh\r\r\t^ (self units: #kilowatt) * (1 units: #hour)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '443' ],
		#self : OmReference [ '444' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.286947+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kelvin,
			#protocol : #'*Units-Core',
			#sourceCode : 'kelvin\r\r\t^self units: #kelvin',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '444' ],
		#self : OmReference [ '445' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.287207+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kg,
			#protocol : #'*Units-Core',
			#sourceCode : 'kg\r\r\t^self units: #kilogram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '445' ],
		#self : OmReference [ '446' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.287473+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kilograms,
			#protocol : #'*Units-Core',
			#sourceCode : 'kilograms\r\r\t^self kg',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '446' ],
		#self : OmReference [ '447' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.287738+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kilohertz,
			#protocol : #'*Units-Core',
			#sourceCode : 'kilohertz\r\r\t^self units: #kilohertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '447' ],
		#self : OmReference [ '448' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.288001+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kilometer,
			#protocol : #'*Units-Core',
			#sourceCode : 'kilometer\r\r\t^self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '448' ],
		#self : OmReference [ '449' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.288264+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kilometers,
			#protocol : #'*Units-Core',
			#sourceCode : 'kilometers\r\r\t^self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '449' ],
		#self : OmReference [ '450' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.288523+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #kilometre,
			#protocol : #'*Units-Core',
			#sourceCode : 'kilometre\r\r\t^self units: #kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '450' ],
		#self : OmReference [ '451' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.288782+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #km,
			#protocol : #'*Units-Core',
			#sourceCode : 'km\r\r\t^self kilometre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '451' ],
		#self : OmReference [ '452' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.289042+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #lb,
			#protocol : #'*Units-Core',
			#sourceCode : 'lb\r\r\t^self pound',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '452' ],
		#self : OmReference [ '453' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.289305+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'lessFromUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'lessFromUnit: unitValue\r\t"Does \'unitValue\' have a smaller magnitude than us?"\r\t\r\t^unitValue value < self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '453' ],
		#self : OmReference [ '454' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.289566+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #liter,
			#protocol : #'*Units-Core',
			#sourceCode : 'liter\r\r\t^self litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '454' ],
		#self : OmReference [ '455' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.289831+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #liters,
			#protocol : #'*Units-Core',
			#sourceCode : 'liters\r\r\t^self litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '455' ],
		#self : OmReference [ '456' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.290098+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #litre,
			#protocol : #'*Units-Core',
			#sourceCode : 'litre\r\r\t^self units: #litre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '456' ],
		#self : OmReference [ '457' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.290359+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #m,
			#protocol : #'*Units-Core',
			#sourceCode : 'm\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '457' ],
		#self : OmReference [ '458' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.290623+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #mA,
			#protocol : #'*Units-Core',
			#sourceCode : 'mA\r\r\t^self units: #milliamp',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '458' ],
		#self : OmReference [ '459' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.290883+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #mV,
			#protocol : #'*Units-Core',
			#sourceCode : 'mV\r\r\t^self units: #millivolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '459' ],
		#self : OmReference [ '460' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.291151+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #megahertz,
			#protocol : #'*Units-Core',
			#sourceCode : 'megahertz\r\r\t^self units: #megahertz',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '460' ],
		#self : OmReference [ '461' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.291416+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #megatonne,
			#protocol : #'*Units-Core',
			#sourceCode : 'megatonne\r\r\t^self units: #megatonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '461' ],
		#self : OmReference [ '462' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.291682+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #meter,
			#protocol : #'*Units-Core',
			#sourceCode : 'meter\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '462' ],
		#self : OmReference [ '463' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.291947+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #meters,
			#protocol : #'*Units-Core',
			#sourceCode : 'meters\r\r\t^self metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '463' ],
		#self : OmReference [ '464' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.292212+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #metre,
			#protocol : #'*Units-Core',
			#sourceCode : 'metre\r\r\t^self units: #metre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '464' ],
		#self : OmReference [ '465' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.292473+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #mg,
			#protocol : #'*Units-Core',
			#sourceCode : 'mg\r\r\t^self milligram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '465' ],
		#self : OmReference [ '466' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.292739+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #mi,
			#protocol : #'*Units-Core',
			#sourceCode : 'mi\r\r\t^ self units: #mile',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '466' ],
		#self : OmReference [ '467' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.293023+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #milligram,
			#protocol : #'*Units-Core',
			#sourceCode : 'milligram\r\r\t^ self units: #milligram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '467' ],
		#self : OmReference [ '468' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.293296+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #millimeter,
			#protocol : #'*Units-Core',
			#sourceCode : 'millimeter\r\r\t^self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '468' ],
		#self : OmReference [ '469' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.293555+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #millimeters,
			#protocol : #'*Units-Core',
			#sourceCode : 'millimeters\r\r\t^self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '469' ],
		#self : OmReference [ '470' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.293824+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #millimetre,
			#protocol : #'*Units-Core',
			#sourceCode : 'millimetre\r\r\t^ self units: #millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '470' ],
		#self : OmReference [ '471' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.294129+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #mm,
			#protocol : #'*Units-Core',
			#sourceCode : 'mm\r\r\t^self millimetre',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '471' ],
		#self : OmReference [ '472' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.294413+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'multiplyByUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'multiplyByUnit: unitValue\r\r\t^unitValue class\r\t\tunit: unitValue unit\r\t\tvalue: unitValue value * self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '472' ],
		#self : OmReference [ '473' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.294684+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #nV,
			#protocol : #'*Units-Core',
			#sourceCode : 'nV\r\t^self units: #nanovolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '473' ],
		#self : OmReference [ '474' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.294955+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #ounce,
			#protocol : #'*Units-Core',
			#sourceCode : 'ounce\r\r\t^ self units: #ounce',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '474' ],
		#self : OmReference [ '475' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.295229+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #oz,
			#protocol : #'*Units-Core',
			#sourceCode : 'oz\r\r\t^self ounce',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '475' ],
		#self : OmReference [ '476' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.2955+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pV,
			#protocol : #'*Units-Core',
			#sourceCode : 'pV\r\t^self units: #picovolt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '476' ],
		#self : OmReference [ '477' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.29577+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pc,
			#protocol : #'*Units-Core',
			#sourceCode : 'pc\r\r\t^self pica',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '477' ],
		#self : OmReference [ '478' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.296037+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pica,
			#protocol : #'*Units-Core',
			#sourceCode : 'pica\r\r\t^ self units: #pica',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '478' ],
		#self : OmReference [ '479' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.296307+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pixel,
			#protocol : #'*Units-Core',
			#sourceCode : 'pixel\r\r\t^ self units: #pixel',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '479' ],
		#self : OmReference [ '480' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.296579+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pixels,
			#protocol : #'*Units-Core',
			#sourceCode : 'pixels\r\r\t^ self pixel',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '480' ],
		#self : OmReference [ '481' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.296849+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #point,
			#protocol : #'*Units-Core',
			#sourceCode : 'point\r\r\t^ self units: #point',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '481' ],
		#self : OmReference [ '482' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.297118+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pound,
			#protocol : #'*Units-Core',
			#sourceCode : 'pound\r\r\t^self units: #pound',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '482' ],
		#self : OmReference [ '483' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.29739+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #pt,
			#protocol : #'*Units-Core',
			#sourceCode : 'pt\r\r\t^self point',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '483' ],
		#self : OmReference [ '484' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.297661+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #px,
			#protocol : #'*Units-Core',
			#sourceCode : 'px\r\r\t^self pixel',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '484' ],
		#self : OmReference [ '485' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.297937+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #rad,
			#protocol : #'*Units-Core',
			#sourceCode : 'rad\r\r\t^self radian',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '485' ],
		#self : OmReference [ '486' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.298211+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #radian,
			#protocol : #'*Units-Core',
			#sourceCode : 'radian\r\r\t^self units: #rad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '486' ],
		#self : OmReference [ '487' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.29848+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #radians,
			#protocol : #'*Units-Core',
			#sourceCode : 'radians\r\r\t^self rad',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '487' ],
		#self : OmReference [ '488' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.298756+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #s,
			#protocol : #'*Units-Core',
			#sourceCode : 's\r\r\t^ self units: #second',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '488' ],
		#self : OmReference [ '489' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.299023+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #st,
			#protocol : #'*Units-Core',
			#sourceCode : 'st\r\r\t^ self stone',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '489' ],
		#self : OmReference [ '490' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.299297+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #stone,
			#protocol : #'*Units-Core',
			#sourceCode : 'stone\r\r\t^ self units: #stone',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '490' ],
		#self : OmReference [ '491' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.299594+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #stones,
			#protocol : #'*Units-Core',
			#sourceCode : 'stones\r\r\t^ self st',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '491' ],
		#self : OmReference [ '492' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.299862+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'subtractFromUnit:',
			#protocol : #'*Units-Core',
			#sourceCode : 'subtractFromUnit: unitValue\r\r\t^unitValue class\r\t\tunit: unitValue unit\r\t\tvalue: unitValue value - self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '492' ],
		#self : OmReference [ '493' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.300123+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #t,
			#protocol : #'*Units-Core',
			#sourceCode : 't\r\r\t^ self tonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '493' ],
		#self : OmReference [ '494' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.300377+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #tonne,
			#protocol : #'*Units-Core',
			#sourceCode : 'tonne\r\r\t^ self units: #tonne',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '494' ],
		#self : OmReference [ '495' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.300631+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #tonnes,
			#protocol : #'*Units-Core',
			#sourceCode : 'tonnes\r\r\t^ self t',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '495' ],
		#self : OmReference [ '496' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.300902+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #ua,
			#protocol : #'*Units-Core',
			#sourceCode : 'ua\r\r\t^self units: #ua',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '496' ],
		#self : OmReference [ '497' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.301168+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'units:',
			#protocol : #'*Units-Core',
			#sourceCode : 'units: unitOrSymbol\r\t^UnitValue \r\t\tunit: (UnitValue unitFor: unitOrSymbol)\r\t\tvalue: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '497' ],
		#self : OmReference [ '498' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.301421+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #yard,
			#protocol : #'*Units-Core',
			#sourceCode : 'yard\r\r\t^ self units: #yard',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '498' ],
		#self : OmReference [ '499' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.301671+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #yards,
			#protocol : #'*Units-Core',
			#sourceCode : 'yards\r\r\t^ self yard',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '499' ],
		#self : OmReference [ '500' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.301931+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #yd,
			#protocol : #'*Units-Core',
			#sourceCode : 'yd\r\r\t^self yard',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '500' ],
		#self : OmReference [ '501' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302186+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #Number,
				#isMetaSide : false
			},
			#name : #'µg',
			#protocol : #'*Units-Core',
			#sourceCode : 'µg\r\r\t^ self units: #microgram',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '501' ],
		#self : OmReference [ '502' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302341+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'UnitValue class',
				#isMetaSide : true
			},
			#name : #one,
			#protocol : #'instance creation',
			#sourceCode : 'one\r\t^1',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '502' ],
		#self : OmReference [ '503' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302448+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'UnitValue class',
				#isMetaSide : true
			},
			#name : #'unit:value:',
			#protocol : #'instance creation',
			#sourceCode : 'unit: unit value: value\r\t^self basicNew unit: unit value: value',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '503' ],
		#self : OmReference [ '504' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302562+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'UnitValue class',
				#isMetaSide : true
			},
			#name : #'unitFor:',
			#protocol : #accessing,
			#sourceCode : 'unitFor: object\r\t"Some methods in UnitValue (and Number>>#units:) can take either\r\t a Unit object, or a symbol representing a unit name, or a UnitValue object.  \r\t If it is a symbol, it is sent as a message to Unit class to retrieve the actual \r\t unit object.  If it is a UnitValue, the unitPart is taken."\r\t\r\t^object isSymbol\r\t\tifTrue: [Unit perform: object]\r\t\tifFalse: [object unitPart]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '504' ],
		#self : OmReference [ '505' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302664+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #'UnitValue class',
				#isMetaSide : true
			},
			#name : #zero,
			#protocol : #'instance creation',
			#sourceCode : 'zero\r\t^0',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '505' ],
		#self : OmReference [ '506' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302767+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'%',
			#protocol : #arithmetic,
			#sourceCode : '% number\r\tself shouldNotImplement',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '506' ],
		#self : OmReference [ '507' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302868+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'*',
			#protocol : #arithmetic,
			#sourceCode : '* number\r\t^number multiplyByUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '507' ],
		#self : OmReference [ '508' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.302967+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'**',
			#protocol : #mathematical,
			#sourceCode : '** exponent\r\t^self raisedTo: exponent',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '508' ],
		#self : OmReference [ '509' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303093+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'+',
			#protocol : #arithmetic,
			#sourceCode : '+ number\r\t^number addToUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '509' ],
		#self : OmReference [ '510' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303204+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #-,
			#protocol : #arithmetic,
			#sourceCode : '- number\r\t^number subtractFromUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '510' ],
		#self : OmReference [ '511' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303308+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #/,
			#protocol : #arithmetic,
			#sourceCode : '/ number\r\t^number divideIntoUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '511' ],
		#self : OmReference [ '512' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303412+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'<',
			#protocol : #comparing,
			#sourceCode : '< number\r\t^number lessFromUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '512' ],
		#self : OmReference [ '513' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303555+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'=',
			#protocol : #comparing,
			#sourceCode : '= number\r\t^number equalFromUnit: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '513' ],
		#self : OmReference [ '514' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303685+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'@',
			#protocol : #arithmetic,
			#sourceCode : '@ anObject\r\t"Answer a new point with x being the receiver and y anObject."\r\t\r\t^Point x: self y: anObject',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '514' ],
		#self : OmReference [ '515' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303796+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'adaptToInteger:andSend:',
			#protocol : #coercing,
			#sourceCode : 'adaptToInteger: rcvr andSend: selector\r\t"handle coercion for mixed arithmetic\r\t uses the method already present for DD"\r\t^(self coerce: rcvr) perform: selector with: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '515' ],
		#self : OmReference [ '516' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.303954+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'adaptToNumber:andSend:',
			#protocol : #coercing,
			#sourceCode : 'adaptToNumber: rcvr andSend: selector\r\t"handle coercion for mixed arithmetic\r\t uses the method already present for DD"\r\t^(self coerce: rcvr) perform: selector with: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '516' ],
		#self : OmReference [ '517' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304065+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'addToUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'addToUnit: unitValue\r\t| sum |\r\t^(self consistentWith: unitValue)\r\t\tifTrue: [\r\t\t\tsum := self uncheckedConvertTo: unitValue.\r\t\t\tsum setValue: unitValue value + sum value.\r\t\t\tsum reduced]\r\t\tifFalse: [unitValue inconsistentUnits: self selector: #+]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '517' ],
		#self : OmReference [ '518' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304178+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #as,
			#protocol : #converting,
			#sourceCode : 'as\r\t"Answer a delegate on the receiver #as: to handle the next message."\r\t\r\t^MessageDelegate on: [:m | self as: m selector]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '518' ],
		#self : OmReference [ '519' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304289+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'as:',
			#protocol : #converting,
			#sourceCode : 'as: anotherUnit\r\t"Convert the receiver to have the same units as \'anotherUnit\'.  Apply any appropriate\r\t scaling factors.  Gives an error if the receiver is not consistent with \'anotherUnit\'."\r\t\r\t^self convertTo: anotherUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '519' ],
		#self : OmReference [ '520' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304433+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #baseUnits,
			#protocol : #converting,
			#sourceCode : 'baseUnits\r\t"Answer the receiver reduced to base units only."\r\t^self convertTo: unit baseUnits',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '520' ],
		#self : OmReference [ '521' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304542+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #ceiling,
			#protocol : #rounding,
			#sourceCode : 'ceiling\r\t^self class\r\t\tunit: unit\r\t\tvalue: value ceiling',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '521' ],
		#self : OmReference [ '522' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304651+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'coerce:',
			#protocol : #coercing,
			#sourceCode : 'coerce: number\r\t^self class\r\t\tunit: CompoundUnit null\r\t\tvalue: number',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '522' ],
		#self : OmReference [ '523' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.30476+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'consistentWith:',
			#protocol : #consistency,
			#sourceCode : 'consistentWith: anotherUnit\r\t^unit consistentWith: anotherUnit unitPart',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '523' ],
		#self : OmReference [ '524' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304883+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'convertTo:',
			#protocol : #converting,
			#sourceCode : 'convertTo: anotherUnit\r\t"Convert the receiver to have the same units as \'anotherUnit\'.  Apply any appropriate\r\t scaling factors.  Gives an error if the receiver is not consistent with \'anotherUnit\'."\r\t| u |\r\tu := self class unitFor: anotherUnit.\r\t^(u consistentWith: unit)\r\t\tifTrue: [u uncheckedConvertFrom: self]\r\t\tifFalse: [self inconsistentUnits: u selector: #convertTo:]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '524' ],
		#self : OmReference [ '525' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.304995+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #cssString,
			#protocol : #printing,
			#sourceCode : 'cssString\r\t"CSS is picky about units directly following the value."\r\t\r\t|str|\r\tstr := (String new: 20) writeStream.\r\tself value printOn: str.\r\tself unit printAbbreviationOn: str.\r\t^str contents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '525' ],
		#self : OmReference [ '526' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305107+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'divideIntoUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'divideIntoUnit: unitValue\r\t"Let the VM check for division by zero."\r\t^(self class\r\t\tunit: (unitValue unit dividedBy: unit)\r\t\tvalue: unitValue value / value) \r\t\t\treduced',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '526' ],
		#self : OmReference [ '527' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305222+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'equalFromUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'equalFromUnit: unitValue\r\t"Is \'unitValue\' equal in magnitude to the receiver?"\r\t| converted |\r\t^(self consistentWith: unitValue)\r\t\tifTrue: [\r"self halt. *** why? ***"\r\t\t\tconverted := self uncheckedConvertTo: unitValue.\r\t\t\tunitValue value = converted value]\r\t\tifFalse: [false]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '527' ],
		#self : OmReference [ '528' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305342+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'factor:',
			#protocol : #converting,
			#sourceCode : 'factor: unitValue\r\t"Factor with respect to another Unit or UnitValue."\r\t| newUnit |\r\tnewUnit := unit factor: (self class unitFor: unitValue).\r\t^self convertTo: newUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '528' ],
		#self : OmReference [ '529' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305449+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #floor,
			#protocol : #rounding,
			#sourceCode : 'floor\r\t^self class\r\t\tunit: unit\r\t\tvalue: value floor',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '529' ],
		#self : OmReference [ '530' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305555+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #generality,
			#protocol : #coercing,
			#sourceCode : 'generality\r\t^46',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '530' ],
		#self : OmReference [ '531' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305667+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #hash,
			#protocol : #comparing,
			#sourceCode : 'hash\r\t"Answer a SmallInteger whose value is related to the receiver\'s identity.\r\tMay be overridden, and should be overridden in any classes that define = "\r\r\t^self unit hash bitXor: self value hash',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '531' ],
		#self : OmReference [ '532' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.305799+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'inconsistentUnits:selector:',
			#protocol : #consistency,
			#sourceCode : 'inconsistentUnits: argument selector: selector\r\tself error:\r\t\t\'Inconsistent units for #\', selector, \' between \',\r\t\t\tself printString, \' and \', argument printString',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '532' ],
		#self : OmReference [ '533' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.30591+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #isZero,
			#protocol : #testing,
			#sourceCode : 'isZero\r\t^unit isZeroAsValue: value',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '533' ],
		#self : OmReference [ '534' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.30603+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'lessFromUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'lessFromUnit: unitValue\r\t"Does \'unitValue\' have a smaller magnitude than us?"\r\t| converted |\r\t^(self consistentWith: unitValue)\r\t\tifTrue: [\r\t\t\tconverted := self uncheckedConvertTo: unitValue.\r\t\t\tunitValue value < converted value]\r\t\tifFalse: [unitValue inconsistentUnits: self selector: #<]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '534' ],
		#self : OmReference [ '535' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306142+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'multiplyByUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'multiplyByUnit: unitValue\r\t^(self class\r\t\tunit: (unit multipliedBy: unitValue unit)\r\t\tvalue: unitValue value * value) reduced',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '535' ],
		#self : OmReference [ '536' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306252+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #negated,
			#protocol : #arithmetic,
			#sourceCode : 'negated\r\t^self class\r\t\tunit: unit\r\t\tvalue: value negated',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '536' ],
		#self : OmReference [ '537' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306362+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #negative,
			#protocol : #testing,
			#sourceCode : 'negative\r\t^value negative',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '537' ],
		#self : OmReference [ '538' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306472+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'printAbbreviatedOn:',
			#protocol : #printing,
			#sourceCode : 'printAbbreviatedOn: stream\r\t"Print the receiver in abbreviated form."\r\t\r\tvalue printOn: stream.\r\tstream space.\r\tunit printAbbreviationOn: stream',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '538' ],
		#self : OmReference [ '539' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306585+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'printOn:',
			#protocol : #printing,
			#sourceCode : 'printOn: stream\r\tvalue printOn: stream.\r\tstream space.\r\tUnit printAbbreviated\r\t\tifTrue: [unit printAbbreviationOn: stream]\r\t\tifFalse: [unit \r\t\t\t\t\tprintFullNameOn: stream\r\t\t\t\t\tpluralized: value ~= 1]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '539' ],
		#self : OmReference [ '540' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306748+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #printStringAbbreviated,
			#protocol : #printing,
			#sourceCode : 'printStringAbbreviated\r\t"Answer the print string in abbreviated form."\r\t\r\t|str|\r\tstr := (String new: 10) writeStream.\r\tself printAbbreviatedOn: str.\r\t^str contents',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '540' ],
		#self : OmReference [ '541' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.306867+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'raisedTo:',
			#protocol : #mathematical,
			#sourceCode : 'raisedTo: exponent\r\t^self class\r\t\tunit: (unit raisedTo: exponent)\r\t\tvalue: (value raisedTo: exponent)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '541' ],
		#self : OmReference [ '542' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.307009+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #reduced,
			#protocol : #converting,
			#sourceCode : 'reduced\r\t"If the receiver\'s units have \'vanished\' (e.g., by dividing 2 seconds by 3 seconds),\r\t answer the remaining scalar part of the receiver.  Otherwise, answer the receiver\r\t unchanged."\r\r\t^ unit isNull\r\t\tifTrue: [ value ]\r\t\tifFalse: [ \r\t\t\t(unit isComplexUnit and: [unit calculateBaseUnits isNull])\r\t\t\t\tifTrue: [ value * unit conversionFactor ]\r\t\t\t\tifFalse: [ self ] ]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '542' ],
		#self : OmReference [ '543' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.309438+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'roundTo:',
			#protocol : #rounding,
			#sourceCode : 'roundTo: number\r\t^self class\r\t\tunit: unit\r\t\tvalue: (value roundTo: number)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '543' ],
		#self : OmReference [ '544' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.309578+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'roundUpTo:',
			#protocol : #rounding,
			#sourceCode : 'roundUpTo: number\r\t^self class\r\t\tunit: unit\r\t\tvalue: (value roundUpTo: number)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '544' ],
		#self : OmReference [ '545' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.3097+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #rounded,
			#protocol : #rounding,
			#sourceCode : 'rounded\r\t^self class\r\t\tunit: unit\r\t\tvalue: value rounded',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '545' ],
		#self : OmReference [ '546' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.309821+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'setUnit:',
			#protocol : #private,
			#sourceCode : 'setUnit: aUnit\r\t"Set the unit."\r\t\r\tunit := aUnit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '546' ],
		#self : OmReference [ '547' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.309942+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'setValue:',
			#protocol : #private,
			#sourceCode : 'setValue: newValue\r\tvalue := newValue',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '547' ],
		#self : OmReference [ '548' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.31006+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #sign,
			#protocol : #testing,
			#sourceCode : 'sign\r\t^value sign',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '548' ],
		#self : OmReference [ '549' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310181+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #sqrt,
			#protocol : #mathematical,
			#sourceCode : 'sqrt\r\t^self class\r\t\tunit: (unit raisedTo: 1/2)\r\t\tvalue: value sqrt',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '549' ],
		#self : OmReference [ '550' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310313+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'storeOn:',
			#protocol : #accessing,
			#sourceCode : 'storeOn: aStream\r\t"Store the code to lookup the receiver instead of for a new instance."\r\t\r\t|as|\r\tas := String new writeStream.\r\tself unit printAbbreviationOn: as.\r\t(Unit respondsTo: as contents asSymbol)\r\t\tifTrue: [self value storeOn: aStream.\r\t\t\t\taStream\r\t\t\t\t\tspace;\r\t\t\t\t\tnextPutAll: as contents]\r\t\tifFalse: [super storeOn: aStream]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '550' ],
		#self : OmReference [ '551' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310491+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'subtractFromUnit:',
			#protocol : #'double dispatching',
			#sourceCode : 'subtractFromUnit: unitValue\r\t"Subtract the receiver from the unitValue."\r\t\r\t| sum |\r\t^(self consistentWith: unitValue)\r\t\tifTrue: [\r\t\t\tsum := self uncheckedConvertTo: unitValue.\r\t\t\tsum setValue: unitValue value - sum value.\r\t\t\tsum reduced]\r\t\tifFalse: [unitValue inconsistentUnits: self selector: #-]',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '551' ],
		#self : OmReference [ '552' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310614+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'truncateTo:',
			#protocol : #rounding,
			#sourceCode : 'truncateTo: number\r\t^self class\r\t\tunit: unit\r\t\tvalue: (value truncateTo: number)',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '552' ],
		#self : OmReference [ '553' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310738+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #truncated,
			#protocol : #rounding,
			#sourceCode : 'truncated\r\t^self class\r\t\tunit: unit\r\t\tvalue: value truncated',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '553' ],
		#self : OmReference [ '554' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310859+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'uncheckedConvertTo:',
			#protocol : #private,
			#sourceCode : 'uncheckedConvertTo: anotherUnit\r\t^anotherUnit unitPart uncheckedConvertFrom: self',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '554' ],
		#self : OmReference [ '555' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.310979+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #unit,
			#protocol : #accessing,
			#sourceCode : 'unit\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '555' ],
		#self : OmReference [ '556' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.311103+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #'unit:value:',
			#protocol : #initialization,
			#sourceCode : 'unit: myUnit value: myValue\r\tunit := myUnit.\r\tvalue := myValue',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '556' ],
		#self : OmReference [ '557' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.311225+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #unitPart,
			#protocol : #private,
			#sourceCode : 'unitPart\r\t"Answer the unit part of the receiver."\r\t^unit',
			#stamp : '',
			#package : #Units-Core
		}
	}
}OmEntry {
	#tags : {
		#author : 'TomSpencer',
		#prior : OmReference [ '557' ],
		#self : OmReference [ '558' ],
		#time : DateAndTime [ '2025-01-08T14:35:07.311348+00:00' ],
		#trigger : OmReference [ '12' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #UnitValue,
				#isMetaSide : false
			},
			#name : #value,
			#protocol : #accessing,
			#sourceCode : 'value\r\t"A special interpretation of #value to answer the scalar part of the unit."\r\t^value',
			#stamp : '',
			#package : #Units-Core
		}
	}
}